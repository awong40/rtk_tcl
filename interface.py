# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_interface', [dirname(__file__)])
        except ImportError:
            import _interface
            return _interface
        if fp is not None:
            try:
                _mod = imp.load_module('_interface', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _interface = swig_import_helper()
    del swig_import_helper
else:
    import _interface
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def varerr(*args):
  return _interface.varerr(*args)
varerr = _interface.varerr

def rescode(*args):
  return _interface.rescode(*args)
rescode = _interface.rescode

def estpos(*args):
  return _interface.estpos(*args)
estpos = _interface.estpos

def fatalerr(*args):
  return _interface.fatalerr(*args)
fatalerr = _interface.fatalerr

def satno(*args):
  return _interface.satno(*args)
satno = _interface.satno

def satsys(*args):
  return _interface.satsys(*args)
satsys = _interface.satsys

def mat(*args):
  return _interface.mat(*args)
mat = _interface.mat

def imat(*args):
  return _interface.imat(*args)
imat = _interface.imat

def dot(*args):
  return _interface.dot(*args)
dot = _interface.dot

def norm(*args):
  return _interface.norm(*args)
norm = _interface.norm

def matcpy(*args):
  return _interface.matcpy(*args)
matcpy = _interface.matcpy

def matmul(*args):
  return _interface.matmul(*args)
matmul = _interface.matmul

def ludcmp(*args):
  return _interface.ludcmp(*args)
ludcmp = _interface.ludcmp

def lubksb(*args):
  return _interface.lubksb(*args)
lubksb = _interface.lubksb

def matinv(*args):
  return _interface.matinv(*args)
matinv = _interface.matinv

def solve(*args):
  return _interface.solve(*args)
solve = _interface.solve

def lsq(*args):
  return _interface.lsq(*args)
lsq = _interface.lsq

def time2epoch(*args):
  return _interface.time2epoch(*args)
time2epoch = _interface.time2epoch

def timeadd(*args):
  return _interface.timeadd(*args)
timeadd = _interface.timeadd

def time2str(*args):
  return _interface.time2str(*args)
time2str = _interface.time2str

def time_str(*args):
  return _interface.time_str(*args)
time_str = _interface.time_str

def ecef2pos(*args):
  return _interface.ecef2pos(*args)
ecef2pos = _interface.ecef2pos
RE_WGS84 = _interface.RE_WGS84
FE_WGS84 = _interface.FE_WGS84
PI = _interface.PI
D2R = _interface.D2R
R2D = _interface.R2D
CLIGHT = _interface.CLIGHT
EFACT_GPS = _interface.EFACT_GPS
EFACT_GLO = _interface.EFACT_GLO
EFACT_SBS = _interface.EFACT_SBS
SYS_GPS = _interface.SYS_GPS
SYS_SBS = _interface.SYS_SBS
SYS_GLO = _interface.SYS_GLO
SYS_GAL = _interface.SYS_GAL
SYS_CMP = _interface.SYS_CMP
NFREQ = _interface.NFREQ
NEXOBS = _interface.NEXOBS
MINPRNGPS = _interface.MINPRNGPS
MAXPRNGPS = _interface.MAXPRNGPS
NSATGPS = _interface.NSATGPS
NSYSGPS = _interface.NSYSGPS
MINPRNGLO = _interface.MINPRNGLO
MAXPRNGLO = _interface.MAXPRNGLO
NSATGLO = _interface.NSATGLO
NSYSGLO = _interface.NSYSGLO
MINPRNGAL = _interface.MINPRNGAL
MAXPRNGAL = _interface.MAXPRNGAL
NSATGAL = _interface.NSATGAL
NSYSGAL = _interface.NSYSGAL
MINPRNQZS = _interface.MINPRNQZS
MAXPRNQZS = _interface.MAXPRNQZS
MINPRNQZS_S = _interface.MINPRNQZS_S
MAXPRNQZS_S = _interface.MAXPRNQZS_S
NSATQZS = _interface.NSATQZS
NSYSQZS = _interface.NSYSQZS
MINPRNCMP = _interface.MINPRNCMP
MAXPRNCMP = _interface.MAXPRNCMP
NSATCMP = _interface.NSATCMP
NSYSCMP = _interface.NSYSCMP
MINPRNLEO = _interface.MINPRNLEO
MAXPRNLEO = _interface.MAXPRNLEO
NSATLEO = _interface.NSATLEO
NSYSLEO = _interface.NSYSLEO
MINPRNSBS = _interface.MINPRNSBS
MAXPRNSBS = _interface.MAXPRNSBS
NSATSBS = _interface.NSATSBS
MAXSAT = _interface.MAXSAT
MAXOBS = _interface.MAXOBS
MAXOBSTYPE = _interface.MAXOBSTYPE
MAXBAND = _interface.MAXBAND
MAXNIGP = _interface.MAXNIGP
MAXCOMMENT = _interface.MAXCOMMENT
MAXSTRPATH = _interface.MAXSTRPATH
MAXSTRMSG = _interface.MAXSTRMSG
MAXSBSMSG = _interface.MAXSBSMSG
MAXSOLMSG = _interface.MAXSOLMSG
MAXRAWLEN = _interface.MAXRAWLEN
MAXERRMSG = _interface.MAXERRMSG
MAXANT = _interface.MAXANT
MAXSOLBUF = _interface.MAXSOLBUF
MAXOBSBUF = _interface.MAXOBSBUF
MAXNRPOS = _interface.MAXNRPOS
MAXCODE = _interface.MAXCODE
PMODE_SINGLE = _interface.PMODE_SINGLE
IONOOPT_IFLC = _interface.IONOOPT_IFLC
MAXRCVFMT = _interface.MAXRCVFMT
FILEPATHSEP = _interface.FILEPATHSEP
class gtime_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gtime_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gtime_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.gtime_t_time_set
    __swig_getmethods__["time"] = _interface.gtime_t_time_get
    if _newclass:time = _swig_property(_interface.gtime_t_time_get, _interface.gtime_t_time_set)
    __swig_setmethods__["sec"] = _interface.gtime_t_sec_set
    __swig_getmethods__["sec"] = _interface.gtime_t_sec_get
    if _newclass:sec = _swig_property(_interface.gtime_t_sec_get, _interface.gtime_t_sec_set)
    def __init__(self): 
        this = _interface.new_gtime_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_gtime_t
    __del__ = lambda self : None;
gtime_t_swigregister = _interface.gtime_t_swigregister
gtime_t_swigregister(gtime_t)

class sol_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sol_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sol_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.sol_t_time_set
    __swig_getmethods__["time"] = _interface.sol_t_time_get
    if _newclass:time = _swig_property(_interface.sol_t_time_get, _interface.sol_t_time_set)
    __swig_setmethods__["rr"] = _interface.sol_t_rr_set
    __swig_getmethods__["rr"] = _interface.sol_t_rr_get
    if _newclass:rr = _swig_property(_interface.sol_t_rr_get, _interface.sol_t_rr_set)
    __swig_setmethods__["qr"] = _interface.sol_t_qr_set
    __swig_getmethods__["qr"] = _interface.sol_t_qr_get
    if _newclass:qr = _swig_property(_interface.sol_t_qr_get, _interface.sol_t_qr_set)
    __swig_setmethods__["dtr"] = _interface.sol_t_dtr_set
    __swig_getmethods__["dtr"] = _interface.sol_t_dtr_get
    if _newclass:dtr = _swig_property(_interface.sol_t_dtr_get, _interface.sol_t_dtr_set)
    __swig_setmethods__["type"] = _interface.sol_t_type_set
    __swig_getmethods__["type"] = _interface.sol_t_type_get
    if _newclass:type = _swig_property(_interface.sol_t_type_get, _interface.sol_t_type_set)
    __swig_setmethods__["stat"] = _interface.sol_t_stat_set
    __swig_getmethods__["stat"] = _interface.sol_t_stat_get
    if _newclass:stat = _swig_property(_interface.sol_t_stat_get, _interface.sol_t_stat_set)
    __swig_setmethods__["ns"] = _interface.sol_t_ns_set
    __swig_getmethods__["ns"] = _interface.sol_t_ns_get
    if _newclass:ns = _swig_property(_interface.sol_t_ns_get, _interface.sol_t_ns_set)
    __swig_setmethods__["age"] = _interface.sol_t_age_set
    __swig_getmethods__["age"] = _interface.sol_t_age_get
    if _newclass:age = _swig_property(_interface.sol_t_age_get, _interface.sol_t_age_set)
    __swig_setmethods__["ratio"] = _interface.sol_t_ratio_set
    __swig_getmethods__["ratio"] = _interface.sol_t_ratio_get
    if _newclass:ratio = _swig_property(_interface.sol_t_ratio_get, _interface.sol_t_ratio_set)
    def __init__(self): 
        this = _interface.new_sol_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sol_t
    __del__ = lambda self : None;
sol_t_swigregister = _interface.sol_t_swigregister
sol_t_swigregister(sol_t)

class obsd_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, obsd_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, obsd_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.obsd_t_time_set
    __swig_getmethods__["time"] = _interface.obsd_t_time_get
    if _newclass:time = _swig_property(_interface.obsd_t_time_get, _interface.obsd_t_time_set)
    __swig_setmethods__["sat"] = _interface.obsd_t_sat_set
    __swig_getmethods__["sat"] = _interface.obsd_t_sat_get
    if _newclass:sat = _swig_property(_interface.obsd_t_sat_get, _interface.obsd_t_sat_set)
    __swig_setmethods__["rcv"] = _interface.obsd_t_rcv_set
    __swig_getmethods__["rcv"] = _interface.obsd_t_rcv_get
    if _newclass:rcv = _swig_property(_interface.obsd_t_rcv_get, _interface.obsd_t_rcv_set)
    __swig_setmethods__["SNR"] = _interface.obsd_t_SNR_set
    __swig_getmethods__["SNR"] = _interface.obsd_t_SNR_get
    if _newclass:SNR = _swig_property(_interface.obsd_t_SNR_get, _interface.obsd_t_SNR_set)
    __swig_setmethods__["LLI"] = _interface.obsd_t_LLI_set
    __swig_getmethods__["LLI"] = _interface.obsd_t_LLI_get
    if _newclass:LLI = _swig_property(_interface.obsd_t_LLI_get, _interface.obsd_t_LLI_set)
    __swig_setmethods__["code"] = _interface.obsd_t_code_set
    __swig_getmethods__["code"] = _interface.obsd_t_code_get
    if _newclass:code = _swig_property(_interface.obsd_t_code_get, _interface.obsd_t_code_set)
    __swig_setmethods__["L"] = _interface.obsd_t_L_set
    __swig_getmethods__["L"] = _interface.obsd_t_L_get
    if _newclass:L = _swig_property(_interface.obsd_t_L_get, _interface.obsd_t_L_set)
    __swig_setmethods__["P"] = _interface.obsd_t_P_set
    __swig_getmethods__["P"] = _interface.obsd_t_P_get
    if _newclass:P = _swig_property(_interface.obsd_t_P_get, _interface.obsd_t_P_set)
    __swig_setmethods__["D"] = _interface.obsd_t_D_set
    __swig_getmethods__["D"] = _interface.obsd_t_D_get
    if _newclass:D = _swig_property(_interface.obsd_t_D_get, _interface.obsd_t_D_set)
    def __init__(self): 
        this = _interface.new_obsd_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_obsd_t
    __del__ = lambda self : None;
obsd_t_swigregister = _interface.obsd_t_swigregister
obsd_t_swigregister(obsd_t)

class obs_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, obs_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, obs_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.obs_t_n_set
    __swig_getmethods__["n"] = _interface.obs_t_n_get
    if _newclass:n = _swig_property(_interface.obs_t_n_get, _interface.obs_t_n_set)
    __swig_setmethods__["nmax"] = _interface.obs_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.obs_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.obs_t_nmax_get, _interface.obs_t_nmax_set)
    __swig_setmethods__["data"] = _interface.obs_t_data_set
    __swig_getmethods__["data"] = _interface.obs_t_data_get
    if _newclass:data = _swig_property(_interface.obs_t_data_get, _interface.obs_t_data_set)
    def __init__(self): 
        this = _interface.new_obs_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_obs_t
    __del__ = lambda self : None;
obs_t_swigregister = _interface.obs_t_swigregister
obs_t_swigregister(obs_t)

class erpd_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, erpd_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, erpd_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mjd"] = _interface.erpd_t_mjd_set
    __swig_getmethods__["mjd"] = _interface.erpd_t_mjd_get
    if _newclass:mjd = _swig_property(_interface.erpd_t_mjd_get, _interface.erpd_t_mjd_set)
    __swig_setmethods__["xp"] = _interface.erpd_t_xp_set
    __swig_getmethods__["xp"] = _interface.erpd_t_xp_get
    if _newclass:xp = _swig_property(_interface.erpd_t_xp_get, _interface.erpd_t_xp_set)
    __swig_setmethods__["yp"] = _interface.erpd_t_yp_set
    __swig_getmethods__["yp"] = _interface.erpd_t_yp_get
    if _newclass:yp = _swig_property(_interface.erpd_t_yp_get, _interface.erpd_t_yp_set)
    __swig_setmethods__["xpr"] = _interface.erpd_t_xpr_set
    __swig_getmethods__["xpr"] = _interface.erpd_t_xpr_get
    if _newclass:xpr = _swig_property(_interface.erpd_t_xpr_get, _interface.erpd_t_xpr_set)
    __swig_setmethods__["ypr"] = _interface.erpd_t_ypr_set
    __swig_getmethods__["ypr"] = _interface.erpd_t_ypr_get
    if _newclass:ypr = _swig_property(_interface.erpd_t_ypr_get, _interface.erpd_t_ypr_set)
    __swig_setmethods__["ut1_utc"] = _interface.erpd_t_ut1_utc_set
    __swig_getmethods__["ut1_utc"] = _interface.erpd_t_ut1_utc_get
    if _newclass:ut1_utc = _swig_property(_interface.erpd_t_ut1_utc_get, _interface.erpd_t_ut1_utc_set)
    __swig_setmethods__["lod"] = _interface.erpd_t_lod_set
    __swig_getmethods__["lod"] = _interface.erpd_t_lod_get
    if _newclass:lod = _swig_property(_interface.erpd_t_lod_get, _interface.erpd_t_lod_set)
    def __init__(self): 
        this = _interface.new_erpd_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_erpd_t
    __del__ = lambda self : None;
erpd_t_swigregister = _interface.erpd_t_swigregister
erpd_t_swigregister(erpd_t)

class erp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, erp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, erp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.erp_t_n_set
    __swig_getmethods__["n"] = _interface.erp_t_n_get
    if _newclass:n = _swig_property(_interface.erp_t_n_get, _interface.erp_t_n_set)
    __swig_setmethods__["nmax"] = _interface.erp_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.erp_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.erp_t_nmax_get, _interface.erp_t_nmax_set)
    __swig_setmethods__["data"] = _interface.erp_t_data_set
    __swig_getmethods__["data"] = _interface.erp_t_data_get
    if _newclass:data = _swig_property(_interface.erp_t_data_get, _interface.erp_t_data_set)
    def __init__(self): 
        this = _interface.new_erp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_erp_t
    __del__ = lambda self : None;
erp_t_swigregister = _interface.erp_t_swigregister
erp_t_swigregister(erp_t)

class pcv_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pcv_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pcv_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.pcv_t_sat_set
    __swig_getmethods__["sat"] = _interface.pcv_t_sat_get
    if _newclass:sat = _swig_property(_interface.pcv_t_sat_get, _interface.pcv_t_sat_set)
    __swig_setmethods__["type"] = _interface.pcv_t_type_set
    __swig_getmethods__["type"] = _interface.pcv_t_type_get
    if _newclass:type = _swig_property(_interface.pcv_t_type_get, _interface.pcv_t_type_set)
    __swig_setmethods__["code"] = _interface.pcv_t_code_set
    __swig_getmethods__["code"] = _interface.pcv_t_code_get
    if _newclass:code = _swig_property(_interface.pcv_t_code_get, _interface.pcv_t_code_set)
    __swig_setmethods__["ts"] = _interface.pcv_t_ts_set
    __swig_getmethods__["ts"] = _interface.pcv_t_ts_get
    if _newclass:ts = _swig_property(_interface.pcv_t_ts_get, _interface.pcv_t_ts_set)
    __swig_setmethods__["te"] = _interface.pcv_t_te_set
    __swig_getmethods__["te"] = _interface.pcv_t_te_get
    if _newclass:te = _swig_property(_interface.pcv_t_te_get, _interface.pcv_t_te_set)
    __swig_setmethods__["off"] = _interface.pcv_t_off_set
    __swig_getmethods__["off"] = _interface.pcv_t_off_get
    if _newclass:off = _swig_property(_interface.pcv_t_off_get, _interface.pcv_t_off_set)
    __swig_setmethods__["var"] = _interface.pcv_t_var_set
    __swig_getmethods__["var"] = _interface.pcv_t_var_get
    if _newclass:var = _swig_property(_interface.pcv_t_var_get, _interface.pcv_t_var_set)
    def __init__(self): 
        this = _interface.new_pcv_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_pcv_t
    __del__ = lambda self : None;
pcv_t_swigregister = _interface.pcv_t_swigregister
pcv_t_swigregister(pcv_t)

class pcvs_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pcvs_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pcvs_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.pcvs_t_n_set
    __swig_getmethods__["n"] = _interface.pcvs_t_n_get
    if _newclass:n = _swig_property(_interface.pcvs_t_n_get, _interface.pcvs_t_n_set)
    __swig_setmethods__["nmax"] = _interface.pcvs_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.pcvs_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.pcvs_t_nmax_get, _interface.pcvs_t_nmax_set)
    __swig_setmethods__["pcv"] = _interface.pcvs_t_pcv_set
    __swig_getmethods__["pcv"] = _interface.pcvs_t_pcv_get
    if _newclass:pcv = _swig_property(_interface.pcvs_t_pcv_get, _interface.pcvs_t_pcv_set)
    def __init__(self): 
        this = _interface.new_pcvs_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_pcvs_t
    __del__ = lambda self : None;
pcvs_t_swigregister = _interface.pcvs_t_swigregister
pcvs_t_swigregister(pcvs_t)

class alm_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, alm_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, alm_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.alm_t_sat_set
    __swig_getmethods__["sat"] = _interface.alm_t_sat_get
    if _newclass:sat = _swig_property(_interface.alm_t_sat_get, _interface.alm_t_sat_set)
    __swig_setmethods__["svh"] = _interface.alm_t_svh_set
    __swig_getmethods__["svh"] = _interface.alm_t_svh_get
    if _newclass:svh = _swig_property(_interface.alm_t_svh_get, _interface.alm_t_svh_set)
    __swig_setmethods__["svconf"] = _interface.alm_t_svconf_set
    __swig_getmethods__["svconf"] = _interface.alm_t_svconf_get
    if _newclass:svconf = _swig_property(_interface.alm_t_svconf_get, _interface.alm_t_svconf_set)
    __swig_setmethods__["week"] = _interface.alm_t_week_set
    __swig_getmethods__["week"] = _interface.alm_t_week_get
    if _newclass:week = _swig_property(_interface.alm_t_week_get, _interface.alm_t_week_set)
    __swig_setmethods__["toa"] = _interface.alm_t_toa_set
    __swig_getmethods__["toa"] = _interface.alm_t_toa_get
    if _newclass:toa = _swig_property(_interface.alm_t_toa_get, _interface.alm_t_toa_set)
    __swig_setmethods__["A"] = _interface.alm_t_A_set
    __swig_getmethods__["A"] = _interface.alm_t_A_get
    if _newclass:A = _swig_property(_interface.alm_t_A_get, _interface.alm_t_A_set)
    __swig_setmethods__["e"] = _interface.alm_t_e_set
    __swig_getmethods__["e"] = _interface.alm_t_e_get
    if _newclass:e = _swig_property(_interface.alm_t_e_get, _interface.alm_t_e_set)
    __swig_setmethods__["i0"] = _interface.alm_t_i0_set
    __swig_getmethods__["i0"] = _interface.alm_t_i0_get
    if _newclass:i0 = _swig_property(_interface.alm_t_i0_get, _interface.alm_t_i0_set)
    __swig_setmethods__["OMG0"] = _interface.alm_t_OMG0_set
    __swig_getmethods__["OMG0"] = _interface.alm_t_OMG0_get
    if _newclass:OMG0 = _swig_property(_interface.alm_t_OMG0_get, _interface.alm_t_OMG0_set)
    __swig_setmethods__["omg"] = _interface.alm_t_omg_set
    __swig_getmethods__["omg"] = _interface.alm_t_omg_get
    if _newclass:omg = _swig_property(_interface.alm_t_omg_get, _interface.alm_t_omg_set)
    __swig_setmethods__["M0"] = _interface.alm_t_M0_set
    __swig_getmethods__["M0"] = _interface.alm_t_M0_get
    if _newclass:M0 = _swig_property(_interface.alm_t_M0_get, _interface.alm_t_M0_set)
    __swig_setmethods__["OMGd"] = _interface.alm_t_OMGd_set
    __swig_getmethods__["OMGd"] = _interface.alm_t_OMGd_get
    if _newclass:OMGd = _swig_property(_interface.alm_t_OMGd_get, _interface.alm_t_OMGd_set)
    __swig_setmethods__["toas"] = _interface.alm_t_toas_set
    __swig_getmethods__["toas"] = _interface.alm_t_toas_get
    if _newclass:toas = _swig_property(_interface.alm_t_toas_get, _interface.alm_t_toas_set)
    __swig_setmethods__["f0"] = _interface.alm_t_f0_set
    __swig_getmethods__["f0"] = _interface.alm_t_f0_get
    if _newclass:f0 = _swig_property(_interface.alm_t_f0_get, _interface.alm_t_f0_set)
    __swig_setmethods__["f1"] = _interface.alm_t_f1_set
    __swig_getmethods__["f1"] = _interface.alm_t_f1_get
    if _newclass:f1 = _swig_property(_interface.alm_t_f1_get, _interface.alm_t_f1_set)
    def __init__(self): 
        this = _interface.new_alm_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_alm_t
    __del__ = lambda self : None;
alm_t_swigregister = _interface.alm_t_swigregister
alm_t_swigregister(alm_t)

class eph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, eph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, eph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.eph_t_sat_set
    __swig_getmethods__["sat"] = _interface.eph_t_sat_get
    if _newclass:sat = _swig_property(_interface.eph_t_sat_get, _interface.eph_t_sat_set)
    __swig_setmethods__["iode"] = _interface.eph_t_iode_set
    __swig_getmethods__["iode"] = _interface.eph_t_iode_get
    if _newclass:iode = _swig_property(_interface.eph_t_iode_get, _interface.eph_t_iode_set)
    __swig_setmethods__["iodc"] = _interface.eph_t_iodc_set
    __swig_getmethods__["iodc"] = _interface.eph_t_iodc_get
    if _newclass:iodc = _swig_property(_interface.eph_t_iodc_get, _interface.eph_t_iodc_set)
    __swig_setmethods__["sva"] = _interface.eph_t_sva_set
    __swig_getmethods__["sva"] = _interface.eph_t_sva_get
    if _newclass:sva = _swig_property(_interface.eph_t_sva_get, _interface.eph_t_sva_set)
    __swig_setmethods__["svh"] = _interface.eph_t_svh_set
    __swig_getmethods__["svh"] = _interface.eph_t_svh_get
    if _newclass:svh = _swig_property(_interface.eph_t_svh_get, _interface.eph_t_svh_set)
    __swig_setmethods__["week"] = _interface.eph_t_week_set
    __swig_getmethods__["week"] = _interface.eph_t_week_get
    if _newclass:week = _swig_property(_interface.eph_t_week_get, _interface.eph_t_week_set)
    __swig_setmethods__["code"] = _interface.eph_t_code_set
    __swig_getmethods__["code"] = _interface.eph_t_code_get
    if _newclass:code = _swig_property(_interface.eph_t_code_get, _interface.eph_t_code_set)
    __swig_setmethods__["flag"] = _interface.eph_t_flag_set
    __swig_getmethods__["flag"] = _interface.eph_t_flag_get
    if _newclass:flag = _swig_property(_interface.eph_t_flag_get, _interface.eph_t_flag_set)
    __swig_setmethods__["toe"] = _interface.eph_t_toe_set
    __swig_getmethods__["toe"] = _interface.eph_t_toe_get
    if _newclass:toe = _swig_property(_interface.eph_t_toe_get, _interface.eph_t_toe_set)
    __swig_setmethods__["toc"] = _interface.eph_t_toc_set
    __swig_getmethods__["toc"] = _interface.eph_t_toc_get
    if _newclass:toc = _swig_property(_interface.eph_t_toc_get, _interface.eph_t_toc_set)
    __swig_setmethods__["ttr"] = _interface.eph_t_ttr_set
    __swig_getmethods__["ttr"] = _interface.eph_t_ttr_get
    if _newclass:ttr = _swig_property(_interface.eph_t_ttr_get, _interface.eph_t_ttr_set)
    __swig_setmethods__["A"] = _interface.eph_t_A_set
    __swig_getmethods__["A"] = _interface.eph_t_A_get
    if _newclass:A = _swig_property(_interface.eph_t_A_get, _interface.eph_t_A_set)
    __swig_setmethods__["e"] = _interface.eph_t_e_set
    __swig_getmethods__["e"] = _interface.eph_t_e_get
    if _newclass:e = _swig_property(_interface.eph_t_e_get, _interface.eph_t_e_set)
    __swig_setmethods__["i0"] = _interface.eph_t_i0_set
    __swig_getmethods__["i0"] = _interface.eph_t_i0_get
    if _newclass:i0 = _swig_property(_interface.eph_t_i0_get, _interface.eph_t_i0_set)
    __swig_setmethods__["OMG0"] = _interface.eph_t_OMG0_set
    __swig_getmethods__["OMG0"] = _interface.eph_t_OMG0_get
    if _newclass:OMG0 = _swig_property(_interface.eph_t_OMG0_get, _interface.eph_t_OMG0_set)
    __swig_setmethods__["omg"] = _interface.eph_t_omg_set
    __swig_getmethods__["omg"] = _interface.eph_t_omg_get
    if _newclass:omg = _swig_property(_interface.eph_t_omg_get, _interface.eph_t_omg_set)
    __swig_setmethods__["M0"] = _interface.eph_t_M0_set
    __swig_getmethods__["M0"] = _interface.eph_t_M0_get
    if _newclass:M0 = _swig_property(_interface.eph_t_M0_get, _interface.eph_t_M0_set)
    __swig_setmethods__["deln"] = _interface.eph_t_deln_set
    __swig_getmethods__["deln"] = _interface.eph_t_deln_get
    if _newclass:deln = _swig_property(_interface.eph_t_deln_get, _interface.eph_t_deln_set)
    __swig_setmethods__["OMGd"] = _interface.eph_t_OMGd_set
    __swig_getmethods__["OMGd"] = _interface.eph_t_OMGd_get
    if _newclass:OMGd = _swig_property(_interface.eph_t_OMGd_get, _interface.eph_t_OMGd_set)
    __swig_setmethods__["idot"] = _interface.eph_t_idot_set
    __swig_getmethods__["idot"] = _interface.eph_t_idot_get
    if _newclass:idot = _swig_property(_interface.eph_t_idot_get, _interface.eph_t_idot_set)
    __swig_setmethods__["crc"] = _interface.eph_t_crc_set
    __swig_getmethods__["crc"] = _interface.eph_t_crc_get
    if _newclass:crc = _swig_property(_interface.eph_t_crc_get, _interface.eph_t_crc_set)
    __swig_setmethods__["crs"] = _interface.eph_t_crs_set
    __swig_getmethods__["crs"] = _interface.eph_t_crs_get
    if _newclass:crs = _swig_property(_interface.eph_t_crs_get, _interface.eph_t_crs_set)
    __swig_setmethods__["cuc"] = _interface.eph_t_cuc_set
    __swig_getmethods__["cuc"] = _interface.eph_t_cuc_get
    if _newclass:cuc = _swig_property(_interface.eph_t_cuc_get, _interface.eph_t_cuc_set)
    __swig_setmethods__["cus"] = _interface.eph_t_cus_set
    __swig_getmethods__["cus"] = _interface.eph_t_cus_get
    if _newclass:cus = _swig_property(_interface.eph_t_cus_get, _interface.eph_t_cus_set)
    __swig_setmethods__["cic"] = _interface.eph_t_cic_set
    __swig_getmethods__["cic"] = _interface.eph_t_cic_get
    if _newclass:cic = _swig_property(_interface.eph_t_cic_get, _interface.eph_t_cic_set)
    __swig_setmethods__["cis"] = _interface.eph_t_cis_set
    __swig_getmethods__["cis"] = _interface.eph_t_cis_get
    if _newclass:cis = _swig_property(_interface.eph_t_cis_get, _interface.eph_t_cis_set)
    __swig_setmethods__["toes"] = _interface.eph_t_toes_set
    __swig_getmethods__["toes"] = _interface.eph_t_toes_get
    if _newclass:toes = _swig_property(_interface.eph_t_toes_get, _interface.eph_t_toes_set)
    __swig_setmethods__["fit"] = _interface.eph_t_fit_set
    __swig_getmethods__["fit"] = _interface.eph_t_fit_get
    if _newclass:fit = _swig_property(_interface.eph_t_fit_get, _interface.eph_t_fit_set)
    __swig_setmethods__["f0"] = _interface.eph_t_f0_set
    __swig_getmethods__["f0"] = _interface.eph_t_f0_get
    if _newclass:f0 = _swig_property(_interface.eph_t_f0_get, _interface.eph_t_f0_set)
    __swig_setmethods__["f1"] = _interface.eph_t_f1_set
    __swig_getmethods__["f1"] = _interface.eph_t_f1_get
    if _newclass:f1 = _swig_property(_interface.eph_t_f1_get, _interface.eph_t_f1_set)
    __swig_setmethods__["f2"] = _interface.eph_t_f2_set
    __swig_getmethods__["f2"] = _interface.eph_t_f2_get
    if _newclass:f2 = _swig_property(_interface.eph_t_f2_get, _interface.eph_t_f2_set)
    __swig_setmethods__["tgd"] = _interface.eph_t_tgd_set
    __swig_getmethods__["tgd"] = _interface.eph_t_tgd_get
    if _newclass:tgd = _swig_property(_interface.eph_t_tgd_get, _interface.eph_t_tgd_set)
    __swig_setmethods__["Adot"] = _interface.eph_t_Adot_set
    __swig_getmethods__["Adot"] = _interface.eph_t_Adot_get
    if _newclass:Adot = _swig_property(_interface.eph_t_Adot_get, _interface.eph_t_Adot_set)
    __swig_setmethods__["ndot"] = _interface.eph_t_ndot_set
    __swig_getmethods__["ndot"] = _interface.eph_t_ndot_get
    if _newclass:ndot = _swig_property(_interface.eph_t_ndot_get, _interface.eph_t_ndot_set)
    def __init__(self): 
        this = _interface.new_eph_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_eph_t
    __del__ = lambda self : None;
eph_t_swigregister = _interface.eph_t_swigregister
eph_t_swigregister(eph_t)

class geph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, geph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, geph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.geph_t_sat_set
    __swig_getmethods__["sat"] = _interface.geph_t_sat_get
    if _newclass:sat = _swig_property(_interface.geph_t_sat_get, _interface.geph_t_sat_set)
    __swig_setmethods__["iode"] = _interface.geph_t_iode_set
    __swig_getmethods__["iode"] = _interface.geph_t_iode_get
    if _newclass:iode = _swig_property(_interface.geph_t_iode_get, _interface.geph_t_iode_set)
    __swig_setmethods__["frq"] = _interface.geph_t_frq_set
    __swig_getmethods__["frq"] = _interface.geph_t_frq_get
    if _newclass:frq = _swig_property(_interface.geph_t_frq_get, _interface.geph_t_frq_set)
    __swig_setmethods__["svh"] = _interface.geph_t_svh_set
    __swig_getmethods__["svh"] = _interface.geph_t_svh_get
    if _newclass:svh = _swig_property(_interface.geph_t_svh_get, _interface.geph_t_svh_set)
    __swig_setmethods__["sva"] = _interface.geph_t_sva_set
    __swig_getmethods__["sva"] = _interface.geph_t_sva_get
    if _newclass:sva = _swig_property(_interface.geph_t_sva_get, _interface.geph_t_sva_set)
    __swig_setmethods__["age"] = _interface.geph_t_age_set
    __swig_getmethods__["age"] = _interface.geph_t_age_get
    if _newclass:age = _swig_property(_interface.geph_t_age_get, _interface.geph_t_age_set)
    __swig_setmethods__["toe"] = _interface.geph_t_toe_set
    __swig_getmethods__["toe"] = _interface.geph_t_toe_get
    if _newclass:toe = _swig_property(_interface.geph_t_toe_get, _interface.geph_t_toe_set)
    __swig_setmethods__["tof"] = _interface.geph_t_tof_set
    __swig_getmethods__["tof"] = _interface.geph_t_tof_get
    if _newclass:tof = _swig_property(_interface.geph_t_tof_get, _interface.geph_t_tof_set)
    __swig_setmethods__["pos"] = _interface.geph_t_pos_set
    __swig_getmethods__["pos"] = _interface.geph_t_pos_get
    if _newclass:pos = _swig_property(_interface.geph_t_pos_get, _interface.geph_t_pos_set)
    __swig_setmethods__["vel"] = _interface.geph_t_vel_set
    __swig_getmethods__["vel"] = _interface.geph_t_vel_get
    if _newclass:vel = _swig_property(_interface.geph_t_vel_get, _interface.geph_t_vel_set)
    __swig_setmethods__["acc"] = _interface.geph_t_acc_set
    __swig_getmethods__["acc"] = _interface.geph_t_acc_get
    if _newclass:acc = _swig_property(_interface.geph_t_acc_get, _interface.geph_t_acc_set)
    __swig_setmethods__["taun"] = _interface.geph_t_taun_set
    __swig_getmethods__["taun"] = _interface.geph_t_taun_get
    if _newclass:taun = _swig_property(_interface.geph_t_taun_get, _interface.geph_t_taun_set)
    __swig_setmethods__["gamn"] = _interface.geph_t_gamn_set
    __swig_getmethods__["gamn"] = _interface.geph_t_gamn_get
    if _newclass:gamn = _swig_property(_interface.geph_t_gamn_get, _interface.geph_t_gamn_set)
    __swig_setmethods__["dtaun"] = _interface.geph_t_dtaun_set
    __swig_getmethods__["dtaun"] = _interface.geph_t_dtaun_get
    if _newclass:dtaun = _swig_property(_interface.geph_t_dtaun_get, _interface.geph_t_dtaun_set)
    def __init__(self): 
        this = _interface.new_geph_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_geph_t
    __del__ = lambda self : None;
geph_t_swigregister = _interface.geph_t_swigregister
geph_t_swigregister(geph_t)

class peph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, peph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, peph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.peph_t_time_set
    __swig_getmethods__["time"] = _interface.peph_t_time_get
    if _newclass:time = _swig_property(_interface.peph_t_time_get, _interface.peph_t_time_set)
    __swig_setmethods__["index"] = _interface.peph_t_index_set
    __swig_getmethods__["index"] = _interface.peph_t_index_get
    if _newclass:index = _swig_property(_interface.peph_t_index_get, _interface.peph_t_index_set)
    __swig_setmethods__["pos"] = _interface.peph_t_pos_set
    __swig_getmethods__["pos"] = _interface.peph_t_pos_get
    if _newclass:pos = _swig_property(_interface.peph_t_pos_get, _interface.peph_t_pos_set)
    __swig_setmethods__["std"] = _interface.peph_t_std_set
    __swig_getmethods__["std"] = _interface.peph_t_std_get
    if _newclass:std = _swig_property(_interface.peph_t_std_get, _interface.peph_t_std_set)
    __swig_setmethods__["vel"] = _interface.peph_t_vel_set
    __swig_getmethods__["vel"] = _interface.peph_t_vel_get
    if _newclass:vel = _swig_property(_interface.peph_t_vel_get, _interface.peph_t_vel_set)
    __swig_setmethods__["vst"] = _interface.peph_t_vst_set
    __swig_getmethods__["vst"] = _interface.peph_t_vst_get
    if _newclass:vst = _swig_property(_interface.peph_t_vst_get, _interface.peph_t_vst_set)
    __swig_setmethods__["cov"] = _interface.peph_t_cov_set
    __swig_getmethods__["cov"] = _interface.peph_t_cov_get
    if _newclass:cov = _swig_property(_interface.peph_t_cov_get, _interface.peph_t_cov_set)
    __swig_setmethods__["vco"] = _interface.peph_t_vco_set
    __swig_getmethods__["vco"] = _interface.peph_t_vco_get
    if _newclass:vco = _swig_property(_interface.peph_t_vco_get, _interface.peph_t_vco_set)
    def __init__(self): 
        this = _interface.new_peph_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_peph_t
    __del__ = lambda self : None;
peph_t_swigregister = _interface.peph_t_swigregister
peph_t_swigregister(peph_t)

class pclk_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pclk_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pclk_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.pclk_t_time_set
    __swig_getmethods__["time"] = _interface.pclk_t_time_get
    if _newclass:time = _swig_property(_interface.pclk_t_time_get, _interface.pclk_t_time_set)
    __swig_setmethods__["index"] = _interface.pclk_t_index_set
    __swig_getmethods__["index"] = _interface.pclk_t_index_get
    if _newclass:index = _swig_property(_interface.pclk_t_index_get, _interface.pclk_t_index_set)
    __swig_setmethods__["clk"] = _interface.pclk_t_clk_set
    __swig_getmethods__["clk"] = _interface.pclk_t_clk_get
    if _newclass:clk = _swig_property(_interface.pclk_t_clk_get, _interface.pclk_t_clk_set)
    __swig_setmethods__["std"] = _interface.pclk_t_std_set
    __swig_getmethods__["std"] = _interface.pclk_t_std_get
    if _newclass:std = _swig_property(_interface.pclk_t_std_get, _interface.pclk_t_std_set)
    def __init__(self): 
        this = _interface.new_pclk_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_pclk_t
    __del__ = lambda self : None;
pclk_t_swigregister = _interface.pclk_t_swigregister
pclk_t_swigregister(pclk_t)

class seph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.seph_t_sat_set
    __swig_getmethods__["sat"] = _interface.seph_t_sat_get
    if _newclass:sat = _swig_property(_interface.seph_t_sat_get, _interface.seph_t_sat_set)
    __swig_setmethods__["t0"] = _interface.seph_t_t0_set
    __swig_getmethods__["t0"] = _interface.seph_t_t0_get
    if _newclass:t0 = _swig_property(_interface.seph_t_t0_get, _interface.seph_t_t0_set)
    __swig_setmethods__["tof"] = _interface.seph_t_tof_set
    __swig_getmethods__["tof"] = _interface.seph_t_tof_get
    if _newclass:tof = _swig_property(_interface.seph_t_tof_get, _interface.seph_t_tof_set)
    __swig_setmethods__["sva"] = _interface.seph_t_sva_set
    __swig_getmethods__["sva"] = _interface.seph_t_sva_get
    if _newclass:sva = _swig_property(_interface.seph_t_sva_get, _interface.seph_t_sva_set)
    __swig_setmethods__["svh"] = _interface.seph_t_svh_set
    __swig_getmethods__["svh"] = _interface.seph_t_svh_get
    if _newclass:svh = _swig_property(_interface.seph_t_svh_get, _interface.seph_t_svh_set)
    __swig_setmethods__["pos"] = _interface.seph_t_pos_set
    __swig_getmethods__["pos"] = _interface.seph_t_pos_get
    if _newclass:pos = _swig_property(_interface.seph_t_pos_get, _interface.seph_t_pos_set)
    __swig_setmethods__["vel"] = _interface.seph_t_vel_set
    __swig_getmethods__["vel"] = _interface.seph_t_vel_get
    if _newclass:vel = _swig_property(_interface.seph_t_vel_get, _interface.seph_t_vel_set)
    __swig_setmethods__["acc"] = _interface.seph_t_acc_set
    __swig_getmethods__["acc"] = _interface.seph_t_acc_get
    if _newclass:acc = _swig_property(_interface.seph_t_acc_get, _interface.seph_t_acc_set)
    __swig_setmethods__["af0"] = _interface.seph_t_af0_set
    __swig_getmethods__["af0"] = _interface.seph_t_af0_get
    if _newclass:af0 = _swig_property(_interface.seph_t_af0_get, _interface.seph_t_af0_set)
    __swig_setmethods__["af1"] = _interface.seph_t_af1_set
    __swig_getmethods__["af1"] = _interface.seph_t_af1_get
    if _newclass:af1 = _swig_property(_interface.seph_t_af1_get, _interface.seph_t_af1_set)
    def __init__(self): 
        this = _interface.new_seph_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_seph_t
    __del__ = lambda self : None;
seph_t_swigregister = _interface.seph_t_swigregister
seph_t_swigregister(seph_t)

class tled_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tled_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tled_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _interface.tled_t_name_set
    __swig_getmethods__["name"] = _interface.tled_t_name_get
    if _newclass:name = _swig_property(_interface.tled_t_name_get, _interface.tled_t_name_set)
    __swig_setmethods__["alias"] = _interface.tled_t_alias_set
    __swig_getmethods__["alias"] = _interface.tled_t_alias_get
    if _newclass:alias = _swig_property(_interface.tled_t_alias_get, _interface.tled_t_alias_set)
    __swig_setmethods__["satno"] = _interface.tled_t_satno_set
    __swig_getmethods__["satno"] = _interface.tled_t_satno_get
    if _newclass:satno = _swig_property(_interface.tled_t_satno_get, _interface.tled_t_satno_set)
    __swig_setmethods__["satclass"] = _interface.tled_t_satclass_set
    __swig_getmethods__["satclass"] = _interface.tled_t_satclass_get
    if _newclass:satclass = _swig_property(_interface.tled_t_satclass_get, _interface.tled_t_satclass_set)
    __swig_setmethods__["desig"] = _interface.tled_t_desig_set
    __swig_getmethods__["desig"] = _interface.tled_t_desig_get
    if _newclass:desig = _swig_property(_interface.tled_t_desig_get, _interface.tled_t_desig_set)
    __swig_setmethods__["epoch"] = _interface.tled_t_epoch_set
    __swig_getmethods__["epoch"] = _interface.tled_t_epoch_get
    if _newclass:epoch = _swig_property(_interface.tled_t_epoch_get, _interface.tled_t_epoch_set)
    __swig_setmethods__["ndot"] = _interface.tled_t_ndot_set
    __swig_getmethods__["ndot"] = _interface.tled_t_ndot_get
    if _newclass:ndot = _swig_property(_interface.tled_t_ndot_get, _interface.tled_t_ndot_set)
    __swig_setmethods__["nddot"] = _interface.tled_t_nddot_set
    __swig_getmethods__["nddot"] = _interface.tled_t_nddot_get
    if _newclass:nddot = _swig_property(_interface.tled_t_nddot_get, _interface.tled_t_nddot_set)
    __swig_setmethods__["bstar"] = _interface.tled_t_bstar_set
    __swig_getmethods__["bstar"] = _interface.tled_t_bstar_get
    if _newclass:bstar = _swig_property(_interface.tled_t_bstar_get, _interface.tled_t_bstar_set)
    __swig_setmethods__["etype"] = _interface.tled_t_etype_set
    __swig_getmethods__["etype"] = _interface.tled_t_etype_get
    if _newclass:etype = _swig_property(_interface.tled_t_etype_get, _interface.tled_t_etype_set)
    __swig_setmethods__["eleno"] = _interface.tled_t_eleno_set
    __swig_getmethods__["eleno"] = _interface.tled_t_eleno_get
    if _newclass:eleno = _swig_property(_interface.tled_t_eleno_get, _interface.tled_t_eleno_set)
    __swig_setmethods__["inc"] = _interface.tled_t_inc_set
    __swig_getmethods__["inc"] = _interface.tled_t_inc_get
    if _newclass:inc = _swig_property(_interface.tled_t_inc_get, _interface.tled_t_inc_set)
    __swig_setmethods__["OMG"] = _interface.tled_t_OMG_set
    __swig_getmethods__["OMG"] = _interface.tled_t_OMG_get
    if _newclass:OMG = _swig_property(_interface.tled_t_OMG_get, _interface.tled_t_OMG_set)
    __swig_setmethods__["ecc"] = _interface.tled_t_ecc_set
    __swig_getmethods__["ecc"] = _interface.tled_t_ecc_get
    if _newclass:ecc = _swig_property(_interface.tled_t_ecc_get, _interface.tled_t_ecc_set)
    __swig_setmethods__["omg"] = _interface.tled_t_omg_set
    __swig_getmethods__["omg"] = _interface.tled_t_omg_get
    if _newclass:omg = _swig_property(_interface.tled_t_omg_get, _interface.tled_t_omg_set)
    __swig_setmethods__["M"] = _interface.tled_t_M_set
    __swig_getmethods__["M"] = _interface.tled_t_M_get
    if _newclass:M = _swig_property(_interface.tled_t_M_get, _interface.tled_t_M_set)
    __swig_setmethods__["n"] = _interface.tled_t_n_set
    __swig_getmethods__["n"] = _interface.tled_t_n_get
    if _newclass:n = _swig_property(_interface.tled_t_n_get, _interface.tled_t_n_set)
    __swig_setmethods__["rev"] = _interface.tled_t_rev_set
    __swig_getmethods__["rev"] = _interface.tled_t_rev_get
    if _newclass:rev = _swig_property(_interface.tled_t_rev_get, _interface.tled_t_rev_set)
    def __init__(self): 
        this = _interface.new_tled_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_tled_t
    __del__ = lambda self : None;
tled_t_swigregister = _interface.tled_t_swigregister
tled_t_swigregister(tled_t)

class tle_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tle_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tle_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.tle_t_n_set
    __swig_getmethods__["n"] = _interface.tle_t_n_get
    if _newclass:n = _swig_property(_interface.tle_t_n_get, _interface.tle_t_n_set)
    __swig_setmethods__["nmax"] = _interface.tle_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.tle_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.tle_t_nmax_get, _interface.tle_t_nmax_set)
    __swig_setmethods__["data"] = _interface.tle_t_data_set
    __swig_getmethods__["data"] = _interface.tle_t_data_get
    if _newclass:data = _swig_property(_interface.tle_t_data_get, _interface.tle_t_data_set)
    def __init__(self): 
        this = _interface.new_tle_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_tle_t
    __del__ = lambda self : None;
tle_t_swigregister = _interface.tle_t_swigregister
tle_t_swigregister(tle_t)

class tec_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tec_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tec_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.tec_t_time_set
    __swig_getmethods__["time"] = _interface.tec_t_time_get
    if _newclass:time = _swig_property(_interface.tec_t_time_get, _interface.tec_t_time_set)
    __swig_setmethods__["ndata"] = _interface.tec_t_ndata_set
    __swig_getmethods__["ndata"] = _interface.tec_t_ndata_get
    if _newclass:ndata = _swig_property(_interface.tec_t_ndata_get, _interface.tec_t_ndata_set)
    __swig_setmethods__["rb"] = _interface.tec_t_rb_set
    __swig_getmethods__["rb"] = _interface.tec_t_rb_get
    if _newclass:rb = _swig_property(_interface.tec_t_rb_get, _interface.tec_t_rb_set)
    __swig_setmethods__["lats"] = _interface.tec_t_lats_set
    __swig_getmethods__["lats"] = _interface.tec_t_lats_get
    if _newclass:lats = _swig_property(_interface.tec_t_lats_get, _interface.tec_t_lats_set)
    __swig_setmethods__["lons"] = _interface.tec_t_lons_set
    __swig_getmethods__["lons"] = _interface.tec_t_lons_get
    if _newclass:lons = _swig_property(_interface.tec_t_lons_get, _interface.tec_t_lons_set)
    __swig_setmethods__["hgts"] = _interface.tec_t_hgts_set
    __swig_getmethods__["hgts"] = _interface.tec_t_hgts_get
    if _newclass:hgts = _swig_property(_interface.tec_t_hgts_get, _interface.tec_t_hgts_set)
    __swig_setmethods__["data"] = _interface.tec_t_data_set
    __swig_getmethods__["data"] = _interface.tec_t_data_get
    if _newclass:data = _swig_property(_interface.tec_t_data_get, _interface.tec_t_data_set)
    __swig_setmethods__["rms"] = _interface.tec_t_rms_set
    __swig_getmethods__["rms"] = _interface.tec_t_rms_get
    if _newclass:rms = _swig_property(_interface.tec_t_rms_get, _interface.tec_t_rms_set)
    def __init__(self): 
        this = _interface.new_tec_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_tec_t
    __del__ = lambda self : None;
tec_t_swigregister = _interface.tec_t_swigregister
tec_t_swigregister(tec_t)

class stecd_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stecd_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stecd_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.stecd_t_time_set
    __swig_getmethods__["time"] = _interface.stecd_t_time_get
    if _newclass:time = _swig_property(_interface.stecd_t_time_get, _interface.stecd_t_time_set)
    __swig_setmethods__["sat"] = _interface.stecd_t_sat_set
    __swig_getmethods__["sat"] = _interface.stecd_t_sat_get
    if _newclass:sat = _swig_property(_interface.stecd_t_sat_get, _interface.stecd_t_sat_set)
    __swig_setmethods__["slip"] = _interface.stecd_t_slip_set
    __swig_getmethods__["slip"] = _interface.stecd_t_slip_get
    if _newclass:slip = _swig_property(_interface.stecd_t_slip_get, _interface.stecd_t_slip_set)
    __swig_setmethods__["iono"] = _interface.stecd_t_iono_set
    __swig_getmethods__["iono"] = _interface.stecd_t_iono_get
    if _newclass:iono = _swig_property(_interface.stecd_t_iono_get, _interface.stecd_t_iono_set)
    __swig_setmethods__["rate"] = _interface.stecd_t_rate_set
    __swig_getmethods__["rate"] = _interface.stecd_t_rate_get
    if _newclass:rate = _swig_property(_interface.stecd_t_rate_get, _interface.stecd_t_rate_set)
    __swig_setmethods__["rms"] = _interface.stecd_t_rms_set
    __swig_getmethods__["rms"] = _interface.stecd_t_rms_get
    if _newclass:rms = _swig_property(_interface.stecd_t_rms_get, _interface.stecd_t_rms_set)
    def __init__(self): 
        this = _interface.new_stecd_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_stecd_t
    __del__ = lambda self : None;
stecd_t_swigregister = _interface.stecd_t_swigregister
stecd_t_swigregister(stecd_t)

class stec_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stec_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stec_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pos"] = _interface.stec_t_pos_set
    __swig_getmethods__["pos"] = _interface.stec_t_pos_get
    if _newclass:pos = _swig_property(_interface.stec_t_pos_get, _interface.stec_t_pos_set)
    __swig_setmethods__["index"] = _interface.stec_t_index_set
    __swig_getmethods__["index"] = _interface.stec_t_index_get
    if _newclass:index = _swig_property(_interface.stec_t_index_get, _interface.stec_t_index_set)
    __swig_setmethods__["n"] = _interface.stec_t_n_set
    __swig_getmethods__["n"] = _interface.stec_t_n_get
    if _newclass:n = _swig_property(_interface.stec_t_n_get, _interface.stec_t_n_set)
    __swig_setmethods__["nmax"] = _interface.stec_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.stec_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.stec_t_nmax_get, _interface.stec_t_nmax_set)
    __swig_setmethods__["data"] = _interface.stec_t_data_set
    __swig_getmethods__["data"] = _interface.stec_t_data_get
    if _newclass:data = _swig_property(_interface.stec_t_data_get, _interface.stec_t_data_set)
    def __init__(self): 
        this = _interface.new_stec_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_stec_t
    __del__ = lambda self : None;
stec_t_swigregister = _interface.stec_t_swigregister
stec_t_swigregister(stec_t)

class zwdd_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, zwdd_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, zwdd_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.zwdd_t_time_set
    __swig_getmethods__["time"] = _interface.zwdd_t_time_get
    if _newclass:time = _swig_property(_interface.zwdd_t_time_get, _interface.zwdd_t_time_set)
    __swig_setmethods__["zwd"] = _interface.zwdd_t_zwd_set
    __swig_getmethods__["zwd"] = _interface.zwdd_t_zwd_get
    if _newclass:zwd = _swig_property(_interface.zwdd_t_zwd_get, _interface.zwdd_t_zwd_set)
    __swig_setmethods__["rms"] = _interface.zwdd_t_rms_set
    __swig_getmethods__["rms"] = _interface.zwdd_t_rms_get
    if _newclass:rms = _swig_property(_interface.zwdd_t_rms_get, _interface.zwdd_t_rms_set)
    def __init__(self): 
        this = _interface.new_zwdd_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_zwdd_t
    __del__ = lambda self : None;
zwdd_t_swigregister = _interface.zwdd_t_swigregister
zwdd_t_swigregister(zwdd_t)

class zwd_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, zwd_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, zwd_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pos"] = _interface.zwd_t_pos_set
    __swig_getmethods__["pos"] = _interface.zwd_t_pos_get
    if _newclass:pos = _swig_property(_interface.zwd_t_pos_get, _interface.zwd_t_pos_set)
    __swig_setmethods__["n"] = _interface.zwd_t_n_set
    __swig_getmethods__["n"] = _interface.zwd_t_n_get
    if _newclass:n = _swig_property(_interface.zwd_t_n_get, _interface.zwd_t_n_set)
    __swig_setmethods__["nmax"] = _interface.zwd_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.zwd_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.zwd_t_nmax_get, _interface.zwd_t_nmax_set)
    __swig_setmethods__["data"] = _interface.zwd_t_data_set
    __swig_getmethods__["data"] = _interface.zwd_t_data_get
    if _newclass:data = _swig_property(_interface.zwd_t_data_get, _interface.zwd_t_data_set)
    def __init__(self): 
        this = _interface.new_zwd_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_zwd_t
    __del__ = lambda self : None;
zwd_t_swigregister = _interface.zwd_t_swigregister
zwd_t_swigregister(zwd_t)

class sbsmsg_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbsmsg_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbsmsg_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["week"] = _interface.sbsmsg_t_week_set
    __swig_getmethods__["week"] = _interface.sbsmsg_t_week_get
    if _newclass:week = _swig_property(_interface.sbsmsg_t_week_get, _interface.sbsmsg_t_week_set)
    __swig_setmethods__["tow"] = _interface.sbsmsg_t_tow_set
    __swig_getmethods__["tow"] = _interface.sbsmsg_t_tow_get
    if _newclass:tow = _swig_property(_interface.sbsmsg_t_tow_get, _interface.sbsmsg_t_tow_set)
    __swig_setmethods__["prn"] = _interface.sbsmsg_t_prn_set
    __swig_getmethods__["prn"] = _interface.sbsmsg_t_prn_get
    if _newclass:prn = _swig_property(_interface.sbsmsg_t_prn_get, _interface.sbsmsg_t_prn_set)
    __swig_setmethods__["msg"] = _interface.sbsmsg_t_msg_set
    __swig_getmethods__["msg"] = _interface.sbsmsg_t_msg_get
    if _newclass:msg = _swig_property(_interface.sbsmsg_t_msg_get, _interface.sbsmsg_t_msg_set)
    def __init__(self): 
        this = _interface.new_sbsmsg_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbsmsg_t
    __del__ = lambda self : None;
sbsmsg_t_swigregister = _interface.sbsmsg_t_swigregister
sbsmsg_t_swigregister(sbsmsg_t)

class sbs_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbs_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbs_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.sbs_t_n_set
    __swig_getmethods__["n"] = _interface.sbs_t_n_get
    if _newclass:n = _swig_property(_interface.sbs_t_n_get, _interface.sbs_t_n_set)
    __swig_setmethods__["nmax"] = _interface.sbs_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.sbs_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.sbs_t_nmax_get, _interface.sbs_t_nmax_set)
    __swig_setmethods__["msgs"] = _interface.sbs_t_msgs_set
    __swig_getmethods__["msgs"] = _interface.sbs_t_msgs_get
    if _newclass:msgs = _swig_property(_interface.sbs_t_msgs_get, _interface.sbs_t_msgs_set)
    def __init__(self): 
        this = _interface.new_sbs_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbs_t
    __del__ = lambda self : None;
sbs_t_swigregister = _interface.sbs_t_swigregister
sbs_t_swigregister(sbs_t)

class sbsfcorr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbsfcorr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbsfcorr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.sbsfcorr_t_t0_set
    __swig_getmethods__["t0"] = _interface.sbsfcorr_t_t0_get
    if _newclass:t0 = _swig_property(_interface.sbsfcorr_t_t0_get, _interface.sbsfcorr_t_t0_set)
    __swig_setmethods__["prc"] = _interface.sbsfcorr_t_prc_set
    __swig_getmethods__["prc"] = _interface.sbsfcorr_t_prc_get
    if _newclass:prc = _swig_property(_interface.sbsfcorr_t_prc_get, _interface.sbsfcorr_t_prc_set)
    __swig_setmethods__["rrc"] = _interface.sbsfcorr_t_rrc_set
    __swig_getmethods__["rrc"] = _interface.sbsfcorr_t_rrc_get
    if _newclass:rrc = _swig_property(_interface.sbsfcorr_t_rrc_get, _interface.sbsfcorr_t_rrc_set)
    __swig_setmethods__["dt"] = _interface.sbsfcorr_t_dt_set
    __swig_getmethods__["dt"] = _interface.sbsfcorr_t_dt_get
    if _newclass:dt = _swig_property(_interface.sbsfcorr_t_dt_get, _interface.sbsfcorr_t_dt_set)
    __swig_setmethods__["iodf"] = _interface.sbsfcorr_t_iodf_set
    __swig_getmethods__["iodf"] = _interface.sbsfcorr_t_iodf_get
    if _newclass:iodf = _swig_property(_interface.sbsfcorr_t_iodf_get, _interface.sbsfcorr_t_iodf_set)
    __swig_setmethods__["udre"] = _interface.sbsfcorr_t_udre_set
    __swig_getmethods__["udre"] = _interface.sbsfcorr_t_udre_get
    if _newclass:udre = _swig_property(_interface.sbsfcorr_t_udre_get, _interface.sbsfcorr_t_udre_set)
    __swig_setmethods__["ai"] = _interface.sbsfcorr_t_ai_set
    __swig_getmethods__["ai"] = _interface.sbsfcorr_t_ai_get
    if _newclass:ai = _swig_property(_interface.sbsfcorr_t_ai_get, _interface.sbsfcorr_t_ai_set)
    def __init__(self): 
        this = _interface.new_sbsfcorr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbsfcorr_t
    __del__ = lambda self : None;
sbsfcorr_t_swigregister = _interface.sbsfcorr_t_swigregister
sbsfcorr_t_swigregister(sbsfcorr_t)

class sbslcorr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbslcorr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbslcorr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.sbslcorr_t_t0_set
    __swig_getmethods__["t0"] = _interface.sbslcorr_t_t0_get
    if _newclass:t0 = _swig_property(_interface.sbslcorr_t_t0_get, _interface.sbslcorr_t_t0_set)
    __swig_setmethods__["iode"] = _interface.sbslcorr_t_iode_set
    __swig_getmethods__["iode"] = _interface.sbslcorr_t_iode_get
    if _newclass:iode = _swig_property(_interface.sbslcorr_t_iode_get, _interface.sbslcorr_t_iode_set)
    __swig_setmethods__["dpos"] = _interface.sbslcorr_t_dpos_set
    __swig_getmethods__["dpos"] = _interface.sbslcorr_t_dpos_get
    if _newclass:dpos = _swig_property(_interface.sbslcorr_t_dpos_get, _interface.sbslcorr_t_dpos_set)
    __swig_setmethods__["dvel"] = _interface.sbslcorr_t_dvel_set
    __swig_getmethods__["dvel"] = _interface.sbslcorr_t_dvel_get
    if _newclass:dvel = _swig_property(_interface.sbslcorr_t_dvel_get, _interface.sbslcorr_t_dvel_set)
    __swig_setmethods__["daf0"] = _interface.sbslcorr_t_daf0_set
    __swig_getmethods__["daf0"] = _interface.sbslcorr_t_daf0_get
    if _newclass:daf0 = _swig_property(_interface.sbslcorr_t_daf0_get, _interface.sbslcorr_t_daf0_set)
    __swig_setmethods__["daf1"] = _interface.sbslcorr_t_daf1_set
    __swig_getmethods__["daf1"] = _interface.sbslcorr_t_daf1_get
    if _newclass:daf1 = _swig_property(_interface.sbslcorr_t_daf1_get, _interface.sbslcorr_t_daf1_set)
    def __init__(self): 
        this = _interface.new_sbslcorr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbslcorr_t
    __del__ = lambda self : None;
sbslcorr_t_swigregister = _interface.sbslcorr_t_swigregister
sbslcorr_t_swigregister(sbslcorr_t)

class sbssatp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbssatp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbssatp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sat"] = _interface.sbssatp_t_sat_set
    __swig_getmethods__["sat"] = _interface.sbssatp_t_sat_get
    if _newclass:sat = _swig_property(_interface.sbssatp_t_sat_get, _interface.sbssatp_t_sat_set)
    __swig_setmethods__["fcorr"] = _interface.sbssatp_t_fcorr_set
    __swig_getmethods__["fcorr"] = _interface.sbssatp_t_fcorr_get
    if _newclass:fcorr = _swig_property(_interface.sbssatp_t_fcorr_get, _interface.sbssatp_t_fcorr_set)
    __swig_setmethods__["lcorr"] = _interface.sbssatp_t_lcorr_set
    __swig_getmethods__["lcorr"] = _interface.sbssatp_t_lcorr_get
    if _newclass:lcorr = _swig_property(_interface.sbssatp_t_lcorr_get, _interface.sbssatp_t_lcorr_set)
    def __init__(self): 
        this = _interface.new_sbssatp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbssatp_t
    __del__ = lambda self : None;
sbssatp_t_swigregister = _interface.sbssatp_t_swigregister
sbssatp_t_swigregister(sbssatp_t)

class sbssat_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbssat_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbssat_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iodp"] = _interface.sbssat_t_iodp_set
    __swig_getmethods__["iodp"] = _interface.sbssat_t_iodp_get
    if _newclass:iodp = _swig_property(_interface.sbssat_t_iodp_get, _interface.sbssat_t_iodp_set)
    __swig_setmethods__["nsat"] = _interface.sbssat_t_nsat_set
    __swig_getmethods__["nsat"] = _interface.sbssat_t_nsat_get
    if _newclass:nsat = _swig_property(_interface.sbssat_t_nsat_get, _interface.sbssat_t_nsat_set)
    __swig_setmethods__["tlat"] = _interface.sbssat_t_tlat_set
    __swig_getmethods__["tlat"] = _interface.sbssat_t_tlat_get
    if _newclass:tlat = _swig_property(_interface.sbssat_t_tlat_get, _interface.sbssat_t_tlat_set)
    __swig_setmethods__["sat"] = _interface.sbssat_t_sat_set
    __swig_getmethods__["sat"] = _interface.sbssat_t_sat_get
    if _newclass:sat = _swig_property(_interface.sbssat_t_sat_get, _interface.sbssat_t_sat_set)
    def __init__(self): 
        this = _interface.new_sbssat_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbssat_t
    __del__ = lambda self : None;
sbssat_t_swigregister = _interface.sbssat_t_swigregister
sbssat_t_swigregister(sbssat_t)

class sbsigp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbsigp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbsigp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.sbsigp_t_t0_set
    __swig_getmethods__["t0"] = _interface.sbsigp_t_t0_get
    if _newclass:t0 = _swig_property(_interface.sbsigp_t_t0_get, _interface.sbsigp_t_t0_set)
    __swig_setmethods__["lat"] = _interface.sbsigp_t_lat_set
    __swig_getmethods__["lat"] = _interface.sbsigp_t_lat_get
    if _newclass:lat = _swig_property(_interface.sbsigp_t_lat_get, _interface.sbsigp_t_lat_set)
    __swig_setmethods__["lon"] = _interface.sbsigp_t_lon_set
    __swig_getmethods__["lon"] = _interface.sbsigp_t_lon_get
    if _newclass:lon = _swig_property(_interface.sbsigp_t_lon_get, _interface.sbsigp_t_lon_set)
    __swig_setmethods__["give"] = _interface.sbsigp_t_give_set
    __swig_getmethods__["give"] = _interface.sbsigp_t_give_get
    if _newclass:give = _swig_property(_interface.sbsigp_t_give_get, _interface.sbsigp_t_give_set)
    __swig_setmethods__["delay"] = _interface.sbsigp_t_delay_set
    __swig_getmethods__["delay"] = _interface.sbsigp_t_delay_get
    if _newclass:delay = _swig_property(_interface.sbsigp_t_delay_get, _interface.sbsigp_t_delay_set)
    def __init__(self): 
        this = _interface.new_sbsigp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbsigp_t
    __del__ = lambda self : None;
sbsigp_t_swigregister = _interface.sbsigp_t_swigregister
sbsigp_t_swigregister(sbsigp_t)

class sbsigpband_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbsigpband_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbsigpband_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _interface.sbsigpband_t_x_set
    __swig_getmethods__["x"] = _interface.sbsigpband_t_x_get
    if _newclass:x = _swig_property(_interface.sbsigpband_t_x_get, _interface.sbsigpband_t_x_set)
    __swig_setmethods__["y"] = _interface.sbsigpband_t_y_set
    __swig_getmethods__["y"] = _interface.sbsigpband_t_y_get
    if _newclass:y = _swig_property(_interface.sbsigpband_t_y_get, _interface.sbsigpband_t_y_set)
    __swig_setmethods__["bits"] = _interface.sbsigpband_t_bits_set
    __swig_getmethods__["bits"] = _interface.sbsigpband_t_bits_get
    if _newclass:bits = _swig_property(_interface.sbsigpband_t_bits_get, _interface.sbsigpband_t_bits_set)
    __swig_setmethods__["bite"] = _interface.sbsigpband_t_bite_set
    __swig_getmethods__["bite"] = _interface.sbsigpband_t_bite_get
    if _newclass:bite = _swig_property(_interface.sbsigpband_t_bite_get, _interface.sbsigpband_t_bite_set)
    def __init__(self): 
        this = _interface.new_sbsigpband_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbsigpband_t
    __del__ = lambda self : None;
sbsigpband_t_swigregister = _interface.sbsigpband_t_swigregister
sbsigpband_t_swigregister(sbsigpband_t)

class sbsion_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sbsion_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sbsion_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iodi"] = _interface.sbsion_t_iodi_set
    __swig_getmethods__["iodi"] = _interface.sbsion_t_iodi_get
    if _newclass:iodi = _swig_property(_interface.sbsion_t_iodi_get, _interface.sbsion_t_iodi_set)
    __swig_setmethods__["nigp"] = _interface.sbsion_t_nigp_set
    __swig_getmethods__["nigp"] = _interface.sbsion_t_nigp_get
    if _newclass:nigp = _swig_property(_interface.sbsion_t_nigp_get, _interface.sbsion_t_nigp_set)
    __swig_setmethods__["igp"] = _interface.sbsion_t_igp_set
    __swig_getmethods__["igp"] = _interface.sbsion_t_igp_get
    if _newclass:igp = _swig_property(_interface.sbsion_t_igp_get, _interface.sbsion_t_igp_set)
    def __init__(self): 
        this = _interface.new_sbsion_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sbsion_t
    __del__ = lambda self : None;
sbsion_t_swigregister = _interface.sbsion_t_swigregister
sbsion_t_swigregister(sbsion_t)

class dgps_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, dgps_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, dgps_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.dgps_t_t0_set
    __swig_getmethods__["t0"] = _interface.dgps_t_t0_get
    if _newclass:t0 = _swig_property(_interface.dgps_t_t0_get, _interface.dgps_t_t0_set)
    __swig_setmethods__["prc"] = _interface.dgps_t_prc_set
    __swig_getmethods__["prc"] = _interface.dgps_t_prc_get
    if _newclass:prc = _swig_property(_interface.dgps_t_prc_get, _interface.dgps_t_prc_set)
    __swig_setmethods__["rrc"] = _interface.dgps_t_rrc_set
    __swig_getmethods__["rrc"] = _interface.dgps_t_rrc_get
    if _newclass:rrc = _swig_property(_interface.dgps_t_rrc_get, _interface.dgps_t_rrc_set)
    __swig_setmethods__["iod"] = _interface.dgps_t_iod_set
    __swig_getmethods__["iod"] = _interface.dgps_t_iod_get
    if _newclass:iod = _swig_property(_interface.dgps_t_iod_get, _interface.dgps_t_iod_set)
    __swig_setmethods__["udre"] = _interface.dgps_t_udre_set
    __swig_getmethods__["udre"] = _interface.dgps_t_udre_get
    if _newclass:udre = _swig_property(_interface.dgps_t_udre_get, _interface.dgps_t_udre_set)
    def __init__(self): 
        this = _interface.new_dgps_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_dgps_t
    __del__ = lambda self : None;
dgps_t_swigregister = _interface.dgps_t_swigregister
dgps_t_swigregister(dgps_t)

class ssr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ssr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ssr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.ssr_t_t0_set
    __swig_getmethods__["t0"] = _interface.ssr_t_t0_get
    if _newclass:t0 = _swig_property(_interface.ssr_t_t0_get, _interface.ssr_t_t0_set)
    __swig_setmethods__["udi"] = _interface.ssr_t_udi_set
    __swig_getmethods__["udi"] = _interface.ssr_t_udi_get
    if _newclass:udi = _swig_property(_interface.ssr_t_udi_get, _interface.ssr_t_udi_set)
    __swig_setmethods__["iod"] = _interface.ssr_t_iod_set
    __swig_getmethods__["iod"] = _interface.ssr_t_iod_get
    if _newclass:iod = _swig_property(_interface.ssr_t_iod_get, _interface.ssr_t_iod_set)
    __swig_setmethods__["iode"] = _interface.ssr_t_iode_set
    __swig_getmethods__["iode"] = _interface.ssr_t_iode_get
    if _newclass:iode = _swig_property(_interface.ssr_t_iode_get, _interface.ssr_t_iode_set)
    __swig_setmethods__["iodcrc"] = _interface.ssr_t_iodcrc_set
    __swig_getmethods__["iodcrc"] = _interface.ssr_t_iodcrc_get
    if _newclass:iodcrc = _swig_property(_interface.ssr_t_iodcrc_get, _interface.ssr_t_iodcrc_set)
    __swig_setmethods__["ura"] = _interface.ssr_t_ura_set
    __swig_getmethods__["ura"] = _interface.ssr_t_ura_get
    if _newclass:ura = _swig_property(_interface.ssr_t_ura_get, _interface.ssr_t_ura_set)
    __swig_setmethods__["refd"] = _interface.ssr_t_refd_set
    __swig_getmethods__["refd"] = _interface.ssr_t_refd_get
    if _newclass:refd = _swig_property(_interface.ssr_t_refd_get, _interface.ssr_t_refd_set)
    __swig_setmethods__["deph"] = _interface.ssr_t_deph_set
    __swig_getmethods__["deph"] = _interface.ssr_t_deph_get
    if _newclass:deph = _swig_property(_interface.ssr_t_deph_get, _interface.ssr_t_deph_set)
    __swig_setmethods__["ddeph"] = _interface.ssr_t_ddeph_set
    __swig_getmethods__["ddeph"] = _interface.ssr_t_ddeph_get
    if _newclass:ddeph = _swig_property(_interface.ssr_t_ddeph_get, _interface.ssr_t_ddeph_set)
    __swig_setmethods__["dclk"] = _interface.ssr_t_dclk_set
    __swig_getmethods__["dclk"] = _interface.ssr_t_dclk_get
    if _newclass:dclk = _swig_property(_interface.ssr_t_dclk_get, _interface.ssr_t_dclk_set)
    __swig_setmethods__["hrclk"] = _interface.ssr_t_hrclk_set
    __swig_getmethods__["hrclk"] = _interface.ssr_t_hrclk_get
    if _newclass:hrclk = _swig_property(_interface.ssr_t_hrclk_get, _interface.ssr_t_hrclk_set)
    __swig_setmethods__["cbias"] = _interface.ssr_t_cbias_set
    __swig_getmethods__["cbias"] = _interface.ssr_t_cbias_get
    if _newclass:cbias = _swig_property(_interface.ssr_t_cbias_get, _interface.ssr_t_cbias_set)
    __swig_setmethods__["update"] = _interface.ssr_t_update_set
    __swig_getmethods__["update"] = _interface.ssr_t_update_get
    if _newclass:update = _swig_property(_interface.ssr_t_update_get, _interface.ssr_t_update_set)
    def __init__(self): 
        this = _interface.new_ssr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_ssr_t
    __del__ = lambda self : None;
ssr_t_swigregister = _interface.ssr_t_swigregister
ssr_t_swigregister(ssr_t)

class lexmsg_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, lexmsg_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, lexmsg_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["prn"] = _interface.lexmsg_t_prn_set
    __swig_getmethods__["prn"] = _interface.lexmsg_t_prn_get
    if _newclass:prn = _swig_property(_interface.lexmsg_t_prn_get, _interface.lexmsg_t_prn_set)
    __swig_setmethods__["type"] = _interface.lexmsg_t_type_set
    __swig_getmethods__["type"] = _interface.lexmsg_t_type_get
    if _newclass:type = _swig_property(_interface.lexmsg_t_type_get, _interface.lexmsg_t_type_set)
    __swig_setmethods__["alert"] = _interface.lexmsg_t_alert_set
    __swig_getmethods__["alert"] = _interface.lexmsg_t_alert_get
    if _newclass:alert = _swig_property(_interface.lexmsg_t_alert_get, _interface.lexmsg_t_alert_set)
    __swig_setmethods__["stat"] = _interface.lexmsg_t_stat_set
    __swig_getmethods__["stat"] = _interface.lexmsg_t_stat_get
    if _newclass:stat = _swig_property(_interface.lexmsg_t_stat_get, _interface.lexmsg_t_stat_set)
    __swig_setmethods__["snr"] = _interface.lexmsg_t_snr_set
    __swig_getmethods__["snr"] = _interface.lexmsg_t_snr_get
    if _newclass:snr = _swig_property(_interface.lexmsg_t_snr_get, _interface.lexmsg_t_snr_set)
    __swig_setmethods__["ttt"] = _interface.lexmsg_t_ttt_set
    __swig_getmethods__["ttt"] = _interface.lexmsg_t_ttt_get
    if _newclass:ttt = _swig_property(_interface.lexmsg_t_ttt_get, _interface.lexmsg_t_ttt_set)
    __swig_setmethods__["msg"] = _interface.lexmsg_t_msg_set
    __swig_getmethods__["msg"] = _interface.lexmsg_t_msg_get
    if _newclass:msg = _swig_property(_interface.lexmsg_t_msg_get, _interface.lexmsg_t_msg_set)
    def __init__(self): 
        this = _interface.new_lexmsg_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_lexmsg_t
    __del__ = lambda self : None;
lexmsg_t_swigregister = _interface.lexmsg_t_swigregister
lexmsg_t_swigregister(lexmsg_t)

class lex_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, lex_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, lex_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.lex_t_n_set
    __swig_getmethods__["n"] = _interface.lex_t_n_get
    if _newclass:n = _swig_property(_interface.lex_t_n_get, _interface.lex_t_n_set)
    __swig_setmethods__["nmax"] = _interface.lex_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.lex_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.lex_t_nmax_get, _interface.lex_t_nmax_set)
    __swig_setmethods__["msgs"] = _interface.lex_t_msgs_set
    __swig_getmethods__["msgs"] = _interface.lex_t_msgs_get
    if _newclass:msgs = _swig_property(_interface.lex_t_msgs_get, _interface.lex_t_msgs_set)
    def __init__(self): 
        this = _interface.new_lex_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_lex_t
    __del__ = lambda self : None;
lex_t_swigregister = _interface.lex_t_swigregister
lex_t_swigregister(lex_t)

class lexeph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, lexeph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, lexeph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["toe"] = _interface.lexeph_t_toe_set
    __swig_getmethods__["toe"] = _interface.lexeph_t_toe_get
    if _newclass:toe = _swig_property(_interface.lexeph_t_toe_get, _interface.lexeph_t_toe_set)
    __swig_setmethods__["tof"] = _interface.lexeph_t_tof_set
    __swig_getmethods__["tof"] = _interface.lexeph_t_tof_get
    if _newclass:tof = _swig_property(_interface.lexeph_t_tof_get, _interface.lexeph_t_tof_set)
    __swig_setmethods__["sat"] = _interface.lexeph_t_sat_set
    __swig_getmethods__["sat"] = _interface.lexeph_t_sat_get
    if _newclass:sat = _swig_property(_interface.lexeph_t_sat_get, _interface.lexeph_t_sat_set)
    __swig_setmethods__["health"] = _interface.lexeph_t_health_set
    __swig_getmethods__["health"] = _interface.lexeph_t_health_get
    if _newclass:health = _swig_property(_interface.lexeph_t_health_get, _interface.lexeph_t_health_set)
    __swig_setmethods__["ura"] = _interface.lexeph_t_ura_set
    __swig_getmethods__["ura"] = _interface.lexeph_t_ura_get
    if _newclass:ura = _swig_property(_interface.lexeph_t_ura_get, _interface.lexeph_t_ura_set)
    __swig_setmethods__["pos"] = _interface.lexeph_t_pos_set
    __swig_getmethods__["pos"] = _interface.lexeph_t_pos_get
    if _newclass:pos = _swig_property(_interface.lexeph_t_pos_get, _interface.lexeph_t_pos_set)
    __swig_setmethods__["vel"] = _interface.lexeph_t_vel_set
    __swig_getmethods__["vel"] = _interface.lexeph_t_vel_get
    if _newclass:vel = _swig_property(_interface.lexeph_t_vel_get, _interface.lexeph_t_vel_set)
    __swig_setmethods__["acc"] = _interface.lexeph_t_acc_set
    __swig_getmethods__["acc"] = _interface.lexeph_t_acc_get
    if _newclass:acc = _swig_property(_interface.lexeph_t_acc_get, _interface.lexeph_t_acc_set)
    __swig_setmethods__["jerk"] = _interface.lexeph_t_jerk_set
    __swig_getmethods__["jerk"] = _interface.lexeph_t_jerk_get
    if _newclass:jerk = _swig_property(_interface.lexeph_t_jerk_get, _interface.lexeph_t_jerk_set)
    __swig_setmethods__["af0"] = _interface.lexeph_t_af0_set
    __swig_getmethods__["af0"] = _interface.lexeph_t_af0_get
    if _newclass:af0 = _swig_property(_interface.lexeph_t_af0_get, _interface.lexeph_t_af0_set)
    __swig_setmethods__["af1"] = _interface.lexeph_t_af1_set
    __swig_getmethods__["af1"] = _interface.lexeph_t_af1_get
    if _newclass:af1 = _swig_property(_interface.lexeph_t_af1_get, _interface.lexeph_t_af1_set)
    __swig_setmethods__["tgd"] = _interface.lexeph_t_tgd_set
    __swig_getmethods__["tgd"] = _interface.lexeph_t_tgd_get
    if _newclass:tgd = _swig_property(_interface.lexeph_t_tgd_get, _interface.lexeph_t_tgd_set)
    __swig_setmethods__["isc"] = _interface.lexeph_t_isc_set
    __swig_getmethods__["isc"] = _interface.lexeph_t_isc_get
    if _newclass:isc = _swig_property(_interface.lexeph_t_isc_get, _interface.lexeph_t_isc_set)
    def __init__(self): 
        this = _interface.new_lexeph_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_lexeph_t
    __del__ = lambda self : None;
lexeph_t_swigregister = _interface.lexeph_t_swigregister
lexeph_t_swigregister(lexeph_t)

class lexion_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, lexion_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, lexion_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["t0"] = _interface.lexion_t_t0_set
    __swig_getmethods__["t0"] = _interface.lexion_t_t0_get
    if _newclass:t0 = _swig_property(_interface.lexion_t_t0_get, _interface.lexion_t_t0_set)
    __swig_setmethods__["tspan"] = _interface.lexion_t_tspan_set
    __swig_getmethods__["tspan"] = _interface.lexion_t_tspan_get
    if _newclass:tspan = _swig_property(_interface.lexion_t_tspan_get, _interface.lexion_t_tspan_set)
    __swig_setmethods__["pos0"] = _interface.lexion_t_pos0_set
    __swig_getmethods__["pos0"] = _interface.lexion_t_pos0_get
    if _newclass:pos0 = _swig_property(_interface.lexion_t_pos0_get, _interface.lexion_t_pos0_set)
    __swig_setmethods__["coef"] = _interface.lexion_t_coef_set
    __swig_getmethods__["coef"] = _interface.lexion_t_coef_get
    if _newclass:coef = _swig_property(_interface.lexion_t_coef_get, _interface.lexion_t_coef_set)
    def __init__(self): 
        this = _interface.new_lexion_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_lexion_t
    __del__ = lambda self : None;
lexion_t_swigregister = _interface.lexion_t_swigregister
lexion_t_swigregister(lexion_t)

class nav_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, nav_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, nav_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.nav_t_n_set
    __swig_getmethods__["n"] = _interface.nav_t_n_get
    if _newclass:n = _swig_property(_interface.nav_t_n_get, _interface.nav_t_n_set)
    __swig_setmethods__["nmax"] = _interface.nav_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.nav_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.nav_t_nmax_get, _interface.nav_t_nmax_set)
    __swig_setmethods__["ng"] = _interface.nav_t_ng_set
    __swig_getmethods__["ng"] = _interface.nav_t_ng_get
    if _newclass:ng = _swig_property(_interface.nav_t_ng_get, _interface.nav_t_ng_set)
    __swig_setmethods__["ngmax"] = _interface.nav_t_ngmax_set
    __swig_getmethods__["ngmax"] = _interface.nav_t_ngmax_get
    if _newclass:ngmax = _swig_property(_interface.nav_t_ngmax_get, _interface.nav_t_ngmax_set)
    __swig_setmethods__["ns"] = _interface.nav_t_ns_set
    __swig_getmethods__["ns"] = _interface.nav_t_ns_get
    if _newclass:ns = _swig_property(_interface.nav_t_ns_get, _interface.nav_t_ns_set)
    __swig_setmethods__["nsmax"] = _interface.nav_t_nsmax_set
    __swig_getmethods__["nsmax"] = _interface.nav_t_nsmax_get
    if _newclass:nsmax = _swig_property(_interface.nav_t_nsmax_get, _interface.nav_t_nsmax_set)
    __swig_setmethods__["ne"] = _interface.nav_t_ne_set
    __swig_getmethods__["ne"] = _interface.nav_t_ne_get
    if _newclass:ne = _swig_property(_interface.nav_t_ne_get, _interface.nav_t_ne_set)
    __swig_setmethods__["nemax"] = _interface.nav_t_nemax_set
    __swig_getmethods__["nemax"] = _interface.nav_t_nemax_get
    if _newclass:nemax = _swig_property(_interface.nav_t_nemax_get, _interface.nav_t_nemax_set)
    __swig_setmethods__["nc"] = _interface.nav_t_nc_set
    __swig_getmethods__["nc"] = _interface.nav_t_nc_get
    if _newclass:nc = _swig_property(_interface.nav_t_nc_get, _interface.nav_t_nc_set)
    __swig_setmethods__["ncmax"] = _interface.nav_t_ncmax_set
    __swig_getmethods__["ncmax"] = _interface.nav_t_ncmax_get
    if _newclass:ncmax = _swig_property(_interface.nav_t_ncmax_get, _interface.nav_t_ncmax_set)
    __swig_setmethods__["na"] = _interface.nav_t_na_set
    __swig_getmethods__["na"] = _interface.nav_t_na_get
    if _newclass:na = _swig_property(_interface.nav_t_na_get, _interface.nav_t_na_set)
    __swig_setmethods__["namax"] = _interface.nav_t_namax_set
    __swig_getmethods__["namax"] = _interface.nav_t_namax_get
    if _newclass:namax = _swig_property(_interface.nav_t_namax_get, _interface.nav_t_namax_set)
    __swig_setmethods__["nt"] = _interface.nav_t_nt_set
    __swig_getmethods__["nt"] = _interface.nav_t_nt_get
    if _newclass:nt = _swig_property(_interface.nav_t_nt_get, _interface.nav_t_nt_set)
    __swig_setmethods__["ntmax"] = _interface.nav_t_ntmax_set
    __swig_getmethods__["ntmax"] = _interface.nav_t_ntmax_get
    if _newclass:ntmax = _swig_property(_interface.nav_t_ntmax_get, _interface.nav_t_ntmax_set)
    __swig_setmethods__["nn"] = _interface.nav_t_nn_set
    __swig_getmethods__["nn"] = _interface.nav_t_nn_get
    if _newclass:nn = _swig_property(_interface.nav_t_nn_get, _interface.nav_t_nn_set)
    __swig_setmethods__["nnmax"] = _interface.nav_t_nnmax_set
    __swig_getmethods__["nnmax"] = _interface.nav_t_nnmax_get
    if _newclass:nnmax = _swig_property(_interface.nav_t_nnmax_get, _interface.nav_t_nnmax_set)
    __swig_setmethods__["eph"] = _interface.nav_t_eph_set
    __swig_getmethods__["eph"] = _interface.nav_t_eph_get
    if _newclass:eph = _swig_property(_interface.nav_t_eph_get, _interface.nav_t_eph_set)
    __swig_setmethods__["geph"] = _interface.nav_t_geph_set
    __swig_getmethods__["geph"] = _interface.nav_t_geph_get
    if _newclass:geph = _swig_property(_interface.nav_t_geph_get, _interface.nav_t_geph_set)
    __swig_setmethods__["seph"] = _interface.nav_t_seph_set
    __swig_getmethods__["seph"] = _interface.nav_t_seph_get
    if _newclass:seph = _swig_property(_interface.nav_t_seph_get, _interface.nav_t_seph_set)
    __swig_setmethods__["peph"] = _interface.nav_t_peph_set
    __swig_getmethods__["peph"] = _interface.nav_t_peph_get
    if _newclass:peph = _swig_property(_interface.nav_t_peph_get, _interface.nav_t_peph_set)
    __swig_setmethods__["pclk"] = _interface.nav_t_pclk_set
    __swig_getmethods__["pclk"] = _interface.nav_t_pclk_get
    if _newclass:pclk = _swig_property(_interface.nav_t_pclk_get, _interface.nav_t_pclk_set)
    __swig_setmethods__["alm"] = _interface.nav_t_alm_set
    __swig_getmethods__["alm"] = _interface.nav_t_alm_get
    if _newclass:alm = _swig_property(_interface.nav_t_alm_get, _interface.nav_t_alm_set)
    __swig_setmethods__["tec"] = _interface.nav_t_tec_set
    __swig_getmethods__["tec"] = _interface.nav_t_tec_get
    if _newclass:tec = _swig_property(_interface.nav_t_tec_get, _interface.nav_t_tec_set)
    __swig_setmethods__["stec"] = _interface.nav_t_stec_set
    __swig_getmethods__["stec"] = _interface.nav_t_stec_get
    if _newclass:stec = _swig_property(_interface.nav_t_stec_get, _interface.nav_t_stec_set)
    __swig_setmethods__["erp"] = _interface.nav_t_erp_set
    __swig_getmethods__["erp"] = _interface.nav_t_erp_get
    if _newclass:erp = _swig_property(_interface.nav_t_erp_get, _interface.nav_t_erp_set)
    __swig_setmethods__["utc_gps"] = _interface.nav_t_utc_gps_set
    __swig_getmethods__["utc_gps"] = _interface.nav_t_utc_gps_get
    if _newclass:utc_gps = _swig_property(_interface.nav_t_utc_gps_get, _interface.nav_t_utc_gps_set)
    __swig_setmethods__["utc_glo"] = _interface.nav_t_utc_glo_set
    __swig_getmethods__["utc_glo"] = _interface.nav_t_utc_glo_get
    if _newclass:utc_glo = _swig_property(_interface.nav_t_utc_glo_get, _interface.nav_t_utc_glo_set)
    __swig_setmethods__["utc_gal"] = _interface.nav_t_utc_gal_set
    __swig_getmethods__["utc_gal"] = _interface.nav_t_utc_gal_get
    if _newclass:utc_gal = _swig_property(_interface.nav_t_utc_gal_get, _interface.nav_t_utc_gal_set)
    __swig_setmethods__["utc_qzs"] = _interface.nav_t_utc_qzs_set
    __swig_getmethods__["utc_qzs"] = _interface.nav_t_utc_qzs_get
    if _newclass:utc_qzs = _swig_property(_interface.nav_t_utc_qzs_get, _interface.nav_t_utc_qzs_set)
    __swig_setmethods__["utc_cmp"] = _interface.nav_t_utc_cmp_set
    __swig_getmethods__["utc_cmp"] = _interface.nav_t_utc_cmp_get
    if _newclass:utc_cmp = _swig_property(_interface.nav_t_utc_cmp_get, _interface.nav_t_utc_cmp_set)
    __swig_setmethods__["utc_sbs"] = _interface.nav_t_utc_sbs_set
    __swig_getmethods__["utc_sbs"] = _interface.nav_t_utc_sbs_get
    if _newclass:utc_sbs = _swig_property(_interface.nav_t_utc_sbs_get, _interface.nav_t_utc_sbs_set)
    __swig_setmethods__["ion_gps"] = _interface.nav_t_ion_gps_set
    __swig_getmethods__["ion_gps"] = _interface.nav_t_ion_gps_get
    if _newclass:ion_gps = _swig_property(_interface.nav_t_ion_gps_get, _interface.nav_t_ion_gps_set)
    __swig_setmethods__["ion_gal"] = _interface.nav_t_ion_gal_set
    __swig_getmethods__["ion_gal"] = _interface.nav_t_ion_gal_get
    if _newclass:ion_gal = _swig_property(_interface.nav_t_ion_gal_get, _interface.nav_t_ion_gal_set)
    __swig_setmethods__["ion_qzs"] = _interface.nav_t_ion_qzs_set
    __swig_getmethods__["ion_qzs"] = _interface.nav_t_ion_qzs_get
    if _newclass:ion_qzs = _swig_property(_interface.nav_t_ion_qzs_get, _interface.nav_t_ion_qzs_set)
    __swig_setmethods__["ion_cmp"] = _interface.nav_t_ion_cmp_set
    __swig_getmethods__["ion_cmp"] = _interface.nav_t_ion_cmp_get
    if _newclass:ion_cmp = _swig_property(_interface.nav_t_ion_cmp_get, _interface.nav_t_ion_cmp_set)
    __swig_setmethods__["leaps"] = _interface.nav_t_leaps_set
    __swig_getmethods__["leaps"] = _interface.nav_t_leaps_get
    if _newclass:leaps = _swig_property(_interface.nav_t_leaps_get, _interface.nav_t_leaps_set)
    __swig_setmethods__["lam"] = _interface.nav_t_lam_set
    __swig_getmethods__["lam"] = _interface.nav_t_lam_get
    if _newclass:lam = _swig_property(_interface.nav_t_lam_get, _interface.nav_t_lam_set)
    __swig_setmethods__["cbias"] = _interface.nav_t_cbias_set
    __swig_getmethods__["cbias"] = _interface.nav_t_cbias_get
    if _newclass:cbias = _swig_property(_interface.nav_t_cbias_get, _interface.nav_t_cbias_set)
    __swig_setmethods__["wlbias"] = _interface.nav_t_wlbias_set
    __swig_getmethods__["wlbias"] = _interface.nav_t_wlbias_get
    if _newclass:wlbias = _swig_property(_interface.nav_t_wlbias_get, _interface.nav_t_wlbias_set)
    __swig_setmethods__["glo_cpbias"] = _interface.nav_t_glo_cpbias_set
    __swig_getmethods__["glo_cpbias"] = _interface.nav_t_glo_cpbias_get
    if _newclass:glo_cpbias = _swig_property(_interface.nav_t_glo_cpbias_get, _interface.nav_t_glo_cpbias_set)
    __swig_setmethods__["glo_fcn"] = _interface.nav_t_glo_fcn_set
    __swig_getmethods__["glo_fcn"] = _interface.nav_t_glo_fcn_get
    if _newclass:glo_fcn = _swig_property(_interface.nav_t_glo_fcn_get, _interface.nav_t_glo_fcn_set)
    __swig_setmethods__["pcvs"] = _interface.nav_t_pcvs_set
    __swig_getmethods__["pcvs"] = _interface.nav_t_pcvs_get
    if _newclass:pcvs = _swig_property(_interface.nav_t_pcvs_get, _interface.nav_t_pcvs_set)
    __swig_setmethods__["sbssat"] = _interface.nav_t_sbssat_set
    __swig_getmethods__["sbssat"] = _interface.nav_t_sbssat_get
    if _newclass:sbssat = _swig_property(_interface.nav_t_sbssat_get, _interface.nav_t_sbssat_set)
    __swig_setmethods__["sbsion"] = _interface.nav_t_sbsion_set
    __swig_getmethods__["sbsion"] = _interface.nav_t_sbsion_get
    if _newclass:sbsion = _swig_property(_interface.nav_t_sbsion_get, _interface.nav_t_sbsion_set)
    __swig_setmethods__["dgps"] = _interface.nav_t_dgps_set
    __swig_getmethods__["dgps"] = _interface.nav_t_dgps_get
    if _newclass:dgps = _swig_property(_interface.nav_t_dgps_get, _interface.nav_t_dgps_set)
    __swig_setmethods__["ssr"] = _interface.nav_t_ssr_set
    __swig_getmethods__["ssr"] = _interface.nav_t_ssr_get
    if _newclass:ssr = _swig_property(_interface.nav_t_ssr_get, _interface.nav_t_ssr_set)
    __swig_setmethods__["lexeph"] = _interface.nav_t_lexeph_set
    __swig_getmethods__["lexeph"] = _interface.nav_t_lexeph_get
    if _newclass:lexeph = _swig_property(_interface.nav_t_lexeph_get, _interface.nav_t_lexeph_set)
    __swig_setmethods__["lexion"] = _interface.nav_t_lexion_set
    __swig_getmethods__["lexion"] = _interface.nav_t_lexion_get
    if _newclass:lexion = _swig_property(_interface.nav_t_lexion_get, _interface.nav_t_lexion_set)
    def __init__(self): 
        this = _interface.new_nav_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_nav_t
    __del__ = lambda self : None;
nav_t_swigregister = _interface.nav_t_swigregister
nav_t_swigregister(nav_t)

class sta_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sta_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sta_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _interface.sta_t_name_set
    __swig_getmethods__["name"] = _interface.sta_t_name_get
    if _newclass:name = _swig_property(_interface.sta_t_name_get, _interface.sta_t_name_set)
    __swig_setmethods__["marker"] = _interface.sta_t_marker_set
    __swig_getmethods__["marker"] = _interface.sta_t_marker_get
    if _newclass:marker = _swig_property(_interface.sta_t_marker_get, _interface.sta_t_marker_set)
    __swig_setmethods__["antdes"] = _interface.sta_t_antdes_set
    __swig_getmethods__["antdes"] = _interface.sta_t_antdes_get
    if _newclass:antdes = _swig_property(_interface.sta_t_antdes_get, _interface.sta_t_antdes_set)
    __swig_setmethods__["antsno"] = _interface.sta_t_antsno_set
    __swig_getmethods__["antsno"] = _interface.sta_t_antsno_get
    if _newclass:antsno = _swig_property(_interface.sta_t_antsno_get, _interface.sta_t_antsno_set)
    __swig_setmethods__["rectype"] = _interface.sta_t_rectype_set
    __swig_getmethods__["rectype"] = _interface.sta_t_rectype_get
    if _newclass:rectype = _swig_property(_interface.sta_t_rectype_get, _interface.sta_t_rectype_set)
    __swig_setmethods__["recver"] = _interface.sta_t_recver_set
    __swig_getmethods__["recver"] = _interface.sta_t_recver_get
    if _newclass:recver = _swig_property(_interface.sta_t_recver_get, _interface.sta_t_recver_set)
    __swig_setmethods__["recsno"] = _interface.sta_t_recsno_set
    __swig_getmethods__["recsno"] = _interface.sta_t_recsno_get
    if _newclass:recsno = _swig_property(_interface.sta_t_recsno_get, _interface.sta_t_recsno_set)
    __swig_setmethods__["antsetup"] = _interface.sta_t_antsetup_set
    __swig_getmethods__["antsetup"] = _interface.sta_t_antsetup_get
    if _newclass:antsetup = _swig_property(_interface.sta_t_antsetup_get, _interface.sta_t_antsetup_set)
    __swig_setmethods__["itrf"] = _interface.sta_t_itrf_set
    __swig_getmethods__["itrf"] = _interface.sta_t_itrf_get
    if _newclass:itrf = _swig_property(_interface.sta_t_itrf_get, _interface.sta_t_itrf_set)
    __swig_setmethods__["deltype"] = _interface.sta_t_deltype_set
    __swig_getmethods__["deltype"] = _interface.sta_t_deltype_get
    if _newclass:deltype = _swig_property(_interface.sta_t_deltype_get, _interface.sta_t_deltype_set)
    __swig_setmethods__["pos"] = _interface.sta_t_pos_set
    __swig_getmethods__["pos"] = _interface.sta_t_pos_get
    if _newclass:pos = _swig_property(_interface.sta_t_pos_get, _interface.sta_t_pos_set)
    __swig_setmethods__["_del"] = _interface.sta_t__del_set
    __swig_getmethods__["_del"] = _interface.sta_t__del_get
    if _newclass:_del = _swig_property(_interface.sta_t__del_get, _interface.sta_t__del_set)
    __swig_setmethods__["hgt"] = _interface.sta_t_hgt_set
    __swig_getmethods__["hgt"] = _interface.sta_t_hgt_get
    if _newclass:hgt = _swig_property(_interface.sta_t_hgt_get, _interface.sta_t_hgt_set)
    def __init__(self): 
        this = _interface.new_sta_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_sta_t
    __del__ = lambda self : None;
sta_t_swigregister = _interface.sta_t_swigregister
sta_t_swigregister(sta_t)

class solbuf_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, solbuf_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, solbuf_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.solbuf_t_n_set
    __swig_getmethods__["n"] = _interface.solbuf_t_n_get
    if _newclass:n = _swig_property(_interface.solbuf_t_n_get, _interface.solbuf_t_n_set)
    __swig_setmethods__["nmax"] = _interface.solbuf_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.solbuf_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.solbuf_t_nmax_get, _interface.solbuf_t_nmax_set)
    __swig_setmethods__["cyclic"] = _interface.solbuf_t_cyclic_set
    __swig_getmethods__["cyclic"] = _interface.solbuf_t_cyclic_get
    if _newclass:cyclic = _swig_property(_interface.solbuf_t_cyclic_get, _interface.solbuf_t_cyclic_set)
    __swig_setmethods__["start"] = _interface.solbuf_t_start_set
    __swig_getmethods__["start"] = _interface.solbuf_t_start_get
    if _newclass:start = _swig_property(_interface.solbuf_t_start_get, _interface.solbuf_t_start_set)
    __swig_setmethods__["end"] = _interface.solbuf_t_end_set
    __swig_getmethods__["end"] = _interface.solbuf_t_end_get
    if _newclass:end = _swig_property(_interface.solbuf_t_end_get, _interface.solbuf_t_end_set)
    __swig_setmethods__["time"] = _interface.solbuf_t_time_set
    __swig_getmethods__["time"] = _interface.solbuf_t_time_get
    if _newclass:time = _swig_property(_interface.solbuf_t_time_get, _interface.solbuf_t_time_set)
    __swig_setmethods__["data"] = _interface.solbuf_t_data_set
    __swig_getmethods__["data"] = _interface.solbuf_t_data_get
    if _newclass:data = _swig_property(_interface.solbuf_t_data_get, _interface.solbuf_t_data_set)
    __swig_setmethods__["rb"] = _interface.solbuf_t_rb_set
    __swig_getmethods__["rb"] = _interface.solbuf_t_rb_get
    if _newclass:rb = _swig_property(_interface.solbuf_t_rb_get, _interface.solbuf_t_rb_set)
    __swig_setmethods__["buff"] = _interface.solbuf_t_buff_set
    __swig_getmethods__["buff"] = _interface.solbuf_t_buff_get
    if _newclass:buff = _swig_property(_interface.solbuf_t_buff_get, _interface.solbuf_t_buff_set)
    __swig_setmethods__["nb"] = _interface.solbuf_t_nb_set
    __swig_getmethods__["nb"] = _interface.solbuf_t_nb_get
    if _newclass:nb = _swig_property(_interface.solbuf_t_nb_get, _interface.solbuf_t_nb_set)
    def __init__(self): 
        this = _interface.new_solbuf_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_solbuf_t
    __del__ = lambda self : None;
solbuf_t_swigregister = _interface.solbuf_t_swigregister
solbuf_t_swigregister(solbuf_t)

class solstat_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, solstat_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, solstat_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.solstat_t_time_set
    __swig_getmethods__["time"] = _interface.solstat_t_time_get
    if _newclass:time = _swig_property(_interface.solstat_t_time_get, _interface.solstat_t_time_set)
    __swig_setmethods__["sat"] = _interface.solstat_t_sat_set
    __swig_getmethods__["sat"] = _interface.solstat_t_sat_get
    if _newclass:sat = _swig_property(_interface.solstat_t_sat_get, _interface.solstat_t_sat_set)
    __swig_setmethods__["frq"] = _interface.solstat_t_frq_set
    __swig_getmethods__["frq"] = _interface.solstat_t_frq_get
    if _newclass:frq = _swig_property(_interface.solstat_t_frq_get, _interface.solstat_t_frq_set)
    __swig_setmethods__["az"] = _interface.solstat_t_az_set
    __swig_getmethods__["az"] = _interface.solstat_t_az_get
    if _newclass:az = _swig_property(_interface.solstat_t_az_get, _interface.solstat_t_az_set)
    __swig_setmethods__["el"] = _interface.solstat_t_el_set
    __swig_getmethods__["el"] = _interface.solstat_t_el_get
    if _newclass:el = _swig_property(_interface.solstat_t_el_get, _interface.solstat_t_el_set)
    __swig_setmethods__["resp"] = _interface.solstat_t_resp_set
    __swig_getmethods__["resp"] = _interface.solstat_t_resp_get
    if _newclass:resp = _swig_property(_interface.solstat_t_resp_get, _interface.solstat_t_resp_set)
    __swig_setmethods__["resc"] = _interface.solstat_t_resc_set
    __swig_getmethods__["resc"] = _interface.solstat_t_resc_get
    if _newclass:resc = _swig_property(_interface.solstat_t_resc_get, _interface.solstat_t_resc_set)
    __swig_setmethods__["flag"] = _interface.solstat_t_flag_set
    __swig_getmethods__["flag"] = _interface.solstat_t_flag_get
    if _newclass:flag = _swig_property(_interface.solstat_t_flag_get, _interface.solstat_t_flag_set)
    __swig_setmethods__["snr"] = _interface.solstat_t_snr_set
    __swig_getmethods__["snr"] = _interface.solstat_t_snr_get
    if _newclass:snr = _swig_property(_interface.solstat_t_snr_get, _interface.solstat_t_snr_set)
    __swig_setmethods__["lock"] = _interface.solstat_t_lock_set
    __swig_getmethods__["lock"] = _interface.solstat_t_lock_get
    if _newclass:lock = _swig_property(_interface.solstat_t_lock_get, _interface.solstat_t_lock_set)
    __swig_setmethods__["outc"] = _interface.solstat_t_outc_set
    __swig_getmethods__["outc"] = _interface.solstat_t_outc_get
    if _newclass:outc = _swig_property(_interface.solstat_t_outc_get, _interface.solstat_t_outc_set)
    __swig_setmethods__["slipc"] = _interface.solstat_t_slipc_set
    __swig_getmethods__["slipc"] = _interface.solstat_t_slipc_get
    if _newclass:slipc = _swig_property(_interface.solstat_t_slipc_get, _interface.solstat_t_slipc_set)
    __swig_setmethods__["rejc"] = _interface.solstat_t_rejc_set
    __swig_getmethods__["rejc"] = _interface.solstat_t_rejc_get
    if _newclass:rejc = _swig_property(_interface.solstat_t_rejc_get, _interface.solstat_t_rejc_set)
    def __init__(self): 
        this = _interface.new_solstat_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_solstat_t
    __del__ = lambda self : None;
solstat_t_swigregister = _interface.solstat_t_swigregister
solstat_t_swigregister(solstat_t)

class solstatbuf_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, solstatbuf_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, solstatbuf_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["n"] = _interface.solstatbuf_t_n_set
    __swig_getmethods__["n"] = _interface.solstatbuf_t_n_get
    if _newclass:n = _swig_property(_interface.solstatbuf_t_n_get, _interface.solstatbuf_t_n_set)
    __swig_setmethods__["nmax"] = _interface.solstatbuf_t_nmax_set
    __swig_getmethods__["nmax"] = _interface.solstatbuf_t_nmax_get
    if _newclass:nmax = _swig_property(_interface.solstatbuf_t_nmax_get, _interface.solstatbuf_t_nmax_set)
    __swig_setmethods__["data"] = _interface.solstatbuf_t_data_set
    __swig_getmethods__["data"] = _interface.solstatbuf_t_data_get
    if _newclass:data = _swig_property(_interface.solstatbuf_t_data_get, _interface.solstatbuf_t_data_set)
    def __init__(self): 
        this = _interface.new_solstatbuf_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_solstatbuf_t
    __del__ = lambda self : None;
solstatbuf_t_swigregister = _interface.solstatbuf_t_swigregister
solstatbuf_t_swigregister(solstatbuf_t)

class rtcm_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rtcm_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rtcm_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["staid"] = _interface.rtcm_t_staid_set
    __swig_getmethods__["staid"] = _interface.rtcm_t_staid_get
    if _newclass:staid = _swig_property(_interface.rtcm_t_staid_get, _interface.rtcm_t_staid_set)
    __swig_setmethods__["stah"] = _interface.rtcm_t_stah_set
    __swig_getmethods__["stah"] = _interface.rtcm_t_stah_get
    if _newclass:stah = _swig_property(_interface.rtcm_t_stah_get, _interface.rtcm_t_stah_set)
    __swig_setmethods__["seqno"] = _interface.rtcm_t_seqno_set
    __swig_getmethods__["seqno"] = _interface.rtcm_t_seqno_get
    if _newclass:seqno = _swig_property(_interface.rtcm_t_seqno_get, _interface.rtcm_t_seqno_set)
    __swig_setmethods__["outtype"] = _interface.rtcm_t_outtype_set
    __swig_getmethods__["outtype"] = _interface.rtcm_t_outtype_get
    if _newclass:outtype = _swig_property(_interface.rtcm_t_outtype_get, _interface.rtcm_t_outtype_set)
    __swig_setmethods__["time"] = _interface.rtcm_t_time_set
    __swig_getmethods__["time"] = _interface.rtcm_t_time_get
    if _newclass:time = _swig_property(_interface.rtcm_t_time_get, _interface.rtcm_t_time_set)
    __swig_setmethods__["time_s"] = _interface.rtcm_t_time_s_set
    __swig_getmethods__["time_s"] = _interface.rtcm_t_time_s_get
    if _newclass:time_s = _swig_property(_interface.rtcm_t_time_s_get, _interface.rtcm_t_time_s_set)
    __swig_setmethods__["obs"] = _interface.rtcm_t_obs_set
    __swig_getmethods__["obs"] = _interface.rtcm_t_obs_get
    if _newclass:obs = _swig_property(_interface.rtcm_t_obs_get, _interface.rtcm_t_obs_set)
    __swig_setmethods__["nav"] = _interface.rtcm_t_nav_set
    __swig_getmethods__["nav"] = _interface.rtcm_t_nav_get
    if _newclass:nav = _swig_property(_interface.rtcm_t_nav_get, _interface.rtcm_t_nav_set)
    __swig_setmethods__["sta"] = _interface.rtcm_t_sta_set
    __swig_getmethods__["sta"] = _interface.rtcm_t_sta_get
    if _newclass:sta = _swig_property(_interface.rtcm_t_sta_get, _interface.rtcm_t_sta_set)
    __swig_setmethods__["dgps"] = _interface.rtcm_t_dgps_set
    __swig_getmethods__["dgps"] = _interface.rtcm_t_dgps_get
    if _newclass:dgps = _swig_property(_interface.rtcm_t_dgps_get, _interface.rtcm_t_dgps_set)
    __swig_setmethods__["ssr"] = _interface.rtcm_t_ssr_set
    __swig_getmethods__["ssr"] = _interface.rtcm_t_ssr_get
    if _newclass:ssr = _swig_property(_interface.rtcm_t_ssr_get, _interface.rtcm_t_ssr_set)
    __swig_setmethods__["msg"] = _interface.rtcm_t_msg_set
    __swig_getmethods__["msg"] = _interface.rtcm_t_msg_get
    if _newclass:msg = _swig_property(_interface.rtcm_t_msg_get, _interface.rtcm_t_msg_set)
    __swig_setmethods__["msgtype"] = _interface.rtcm_t_msgtype_set
    __swig_getmethods__["msgtype"] = _interface.rtcm_t_msgtype_get
    if _newclass:msgtype = _swig_property(_interface.rtcm_t_msgtype_get, _interface.rtcm_t_msgtype_set)
    __swig_setmethods__["msmtype"] = _interface.rtcm_t_msmtype_set
    __swig_getmethods__["msmtype"] = _interface.rtcm_t_msmtype_get
    if _newclass:msmtype = _swig_property(_interface.rtcm_t_msmtype_get, _interface.rtcm_t_msmtype_set)
    __swig_setmethods__["obsflag"] = _interface.rtcm_t_obsflag_set
    __swig_getmethods__["obsflag"] = _interface.rtcm_t_obsflag_get
    if _newclass:obsflag = _swig_property(_interface.rtcm_t_obsflag_get, _interface.rtcm_t_obsflag_set)
    __swig_setmethods__["ephsat"] = _interface.rtcm_t_ephsat_set
    __swig_getmethods__["ephsat"] = _interface.rtcm_t_ephsat_get
    if _newclass:ephsat = _swig_property(_interface.rtcm_t_ephsat_get, _interface.rtcm_t_ephsat_set)
    __swig_setmethods__["cp"] = _interface.rtcm_t_cp_set
    __swig_getmethods__["cp"] = _interface.rtcm_t_cp_get
    if _newclass:cp = _swig_property(_interface.rtcm_t_cp_get, _interface.rtcm_t_cp_set)
    __swig_setmethods__["lock"] = _interface.rtcm_t_lock_set
    __swig_getmethods__["lock"] = _interface.rtcm_t_lock_get
    if _newclass:lock = _swig_property(_interface.rtcm_t_lock_get, _interface.rtcm_t_lock_set)
    __swig_setmethods__["loss"] = _interface.rtcm_t_loss_set
    __swig_getmethods__["loss"] = _interface.rtcm_t_loss_get
    if _newclass:loss = _swig_property(_interface.rtcm_t_loss_get, _interface.rtcm_t_loss_set)
    __swig_setmethods__["lltime"] = _interface.rtcm_t_lltime_set
    __swig_getmethods__["lltime"] = _interface.rtcm_t_lltime_get
    if _newclass:lltime = _swig_property(_interface.rtcm_t_lltime_get, _interface.rtcm_t_lltime_set)
    __swig_setmethods__["nbyte"] = _interface.rtcm_t_nbyte_set
    __swig_getmethods__["nbyte"] = _interface.rtcm_t_nbyte_get
    if _newclass:nbyte = _swig_property(_interface.rtcm_t_nbyte_get, _interface.rtcm_t_nbyte_set)
    __swig_setmethods__["nbit"] = _interface.rtcm_t_nbit_set
    __swig_getmethods__["nbit"] = _interface.rtcm_t_nbit_get
    if _newclass:nbit = _swig_property(_interface.rtcm_t_nbit_get, _interface.rtcm_t_nbit_set)
    __swig_setmethods__["len"] = _interface.rtcm_t_len_set
    __swig_getmethods__["len"] = _interface.rtcm_t_len_get
    if _newclass:len = _swig_property(_interface.rtcm_t_len_get, _interface.rtcm_t_len_set)
    __swig_setmethods__["buff"] = _interface.rtcm_t_buff_set
    __swig_getmethods__["buff"] = _interface.rtcm_t_buff_get
    if _newclass:buff = _swig_property(_interface.rtcm_t_buff_get, _interface.rtcm_t_buff_set)
    __swig_setmethods__["word"] = _interface.rtcm_t_word_set
    __swig_getmethods__["word"] = _interface.rtcm_t_word_get
    if _newclass:word = _swig_property(_interface.rtcm_t_word_get, _interface.rtcm_t_word_set)
    __swig_setmethods__["nmsg2"] = _interface.rtcm_t_nmsg2_set
    __swig_getmethods__["nmsg2"] = _interface.rtcm_t_nmsg2_get
    if _newclass:nmsg2 = _swig_property(_interface.rtcm_t_nmsg2_get, _interface.rtcm_t_nmsg2_set)
    __swig_setmethods__["nmsg3"] = _interface.rtcm_t_nmsg3_set
    __swig_getmethods__["nmsg3"] = _interface.rtcm_t_nmsg3_get
    if _newclass:nmsg3 = _swig_property(_interface.rtcm_t_nmsg3_get, _interface.rtcm_t_nmsg3_set)
    __swig_setmethods__["opt"] = _interface.rtcm_t_opt_set
    __swig_getmethods__["opt"] = _interface.rtcm_t_opt_get
    if _newclass:opt = _swig_property(_interface.rtcm_t_opt_get, _interface.rtcm_t_opt_set)
    def __init__(self): 
        this = _interface.new_rtcm_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_rtcm_t
    __del__ = lambda self : None;
rtcm_t_swigregister = _interface.rtcm_t_swigregister
rtcm_t_swigregister(rtcm_t)

class rnxctr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rnxctr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rnxctr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.rnxctr_t_time_set
    __swig_getmethods__["time"] = _interface.rnxctr_t_time_get
    if _newclass:time = _swig_property(_interface.rnxctr_t_time_get, _interface.rnxctr_t_time_set)
    __swig_setmethods__["ver"] = _interface.rnxctr_t_ver_set
    __swig_getmethods__["ver"] = _interface.rnxctr_t_ver_get
    if _newclass:ver = _swig_property(_interface.rnxctr_t_ver_get, _interface.rnxctr_t_ver_set)
    __swig_setmethods__["type"] = _interface.rnxctr_t_type_set
    __swig_getmethods__["type"] = _interface.rnxctr_t_type_get
    if _newclass:type = _swig_property(_interface.rnxctr_t_type_get, _interface.rnxctr_t_type_set)
    __swig_setmethods__["sys"] = _interface.rnxctr_t_sys_set
    __swig_getmethods__["sys"] = _interface.rnxctr_t_sys_get
    if _newclass:sys = _swig_property(_interface.rnxctr_t_sys_get, _interface.rnxctr_t_sys_set)
    __swig_setmethods__["tsys"] = _interface.rnxctr_t_tsys_set
    __swig_getmethods__["tsys"] = _interface.rnxctr_t_tsys_get
    if _newclass:tsys = _swig_property(_interface.rnxctr_t_tsys_get, _interface.rnxctr_t_tsys_set)
    __swig_setmethods__["tobs"] = _interface.rnxctr_t_tobs_set
    __swig_getmethods__["tobs"] = _interface.rnxctr_t_tobs_get
    if _newclass:tobs = _swig_property(_interface.rnxctr_t_tobs_get, _interface.rnxctr_t_tobs_set)
    __swig_setmethods__["obs"] = _interface.rnxctr_t_obs_set
    __swig_getmethods__["obs"] = _interface.rnxctr_t_obs_get
    if _newclass:obs = _swig_property(_interface.rnxctr_t_obs_get, _interface.rnxctr_t_obs_set)
    __swig_setmethods__["nav"] = _interface.rnxctr_t_nav_set
    __swig_getmethods__["nav"] = _interface.rnxctr_t_nav_get
    if _newclass:nav = _swig_property(_interface.rnxctr_t_nav_get, _interface.rnxctr_t_nav_set)
    __swig_setmethods__["sta"] = _interface.rnxctr_t_sta_set
    __swig_getmethods__["sta"] = _interface.rnxctr_t_sta_get
    if _newclass:sta = _swig_property(_interface.rnxctr_t_sta_get, _interface.rnxctr_t_sta_set)
    __swig_setmethods__["ephsat"] = _interface.rnxctr_t_ephsat_set
    __swig_getmethods__["ephsat"] = _interface.rnxctr_t_ephsat_get
    if _newclass:ephsat = _swig_property(_interface.rnxctr_t_ephsat_get, _interface.rnxctr_t_ephsat_set)
    __swig_setmethods__["opt"] = _interface.rnxctr_t_opt_set
    __swig_getmethods__["opt"] = _interface.rnxctr_t_opt_get
    if _newclass:opt = _swig_property(_interface.rnxctr_t_opt_get, _interface.rnxctr_t_opt_set)
    def __init__(self): 
        this = _interface.new_rnxctr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_rnxctr_t
    __del__ = lambda self : None;
rnxctr_t_swigregister = _interface.rnxctr_t_swigregister
rnxctr_t_swigregister(rnxctr_t)

class url_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, url_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, url_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _interface.url_t_type_set
    __swig_getmethods__["type"] = _interface.url_t_type_get
    if _newclass:type = _swig_property(_interface.url_t_type_get, _interface.url_t_type_set)
    __swig_setmethods__["path"] = _interface.url_t_path_set
    __swig_getmethods__["path"] = _interface.url_t_path_get
    if _newclass:path = _swig_property(_interface.url_t_path_get, _interface.url_t_path_set)
    __swig_setmethods__["dir"] = _interface.url_t_dir_set
    __swig_getmethods__["dir"] = _interface.url_t_dir_get
    if _newclass:dir = _swig_property(_interface.url_t_dir_get, _interface.url_t_dir_set)
    __swig_setmethods__["tint"] = _interface.url_t_tint_set
    __swig_getmethods__["tint"] = _interface.url_t_tint_get
    if _newclass:tint = _swig_property(_interface.url_t_tint_get, _interface.url_t_tint_set)
    def __init__(self): 
        this = _interface.new_url_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_url_t
    __del__ = lambda self : None;
url_t_swigregister = _interface.url_t_swigregister
url_t_swigregister(url_t)

class opt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, opt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, opt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _interface.opt_t_name_set
    __swig_getmethods__["name"] = _interface.opt_t_name_get
    if _newclass:name = _swig_property(_interface.opt_t_name_get, _interface.opt_t_name_set)
    __swig_setmethods__["format"] = _interface.opt_t_format_set
    __swig_getmethods__["format"] = _interface.opt_t_format_get
    if _newclass:format = _swig_property(_interface.opt_t_format_get, _interface.opt_t_format_set)
    __swig_setmethods__["var"] = _interface.opt_t_var_set
    __swig_getmethods__["var"] = _interface.opt_t_var_get
    if _newclass:var = _swig_property(_interface.opt_t_var_get, _interface.opt_t_var_set)
    __swig_setmethods__["comment"] = _interface.opt_t_comment_set
    __swig_getmethods__["comment"] = _interface.opt_t_comment_get
    if _newclass:comment = _swig_property(_interface.opt_t_comment_get, _interface.opt_t_comment_set)
    def __init__(self): 
        this = _interface.new_opt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_opt_t
    __del__ = lambda self : None;
opt_t_swigregister = _interface.opt_t_swigregister
opt_t_swigregister(opt_t)

class exterr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, exterr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, exterr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ena"] = _interface.exterr_t_ena_set
    __swig_getmethods__["ena"] = _interface.exterr_t_ena_get
    if _newclass:ena = _swig_property(_interface.exterr_t_ena_get, _interface.exterr_t_ena_set)
    __swig_setmethods__["cerr"] = _interface.exterr_t_cerr_set
    __swig_getmethods__["cerr"] = _interface.exterr_t_cerr_get
    if _newclass:cerr = _swig_property(_interface.exterr_t_cerr_get, _interface.exterr_t_cerr_set)
    __swig_setmethods__["perr"] = _interface.exterr_t_perr_set
    __swig_getmethods__["perr"] = _interface.exterr_t_perr_get
    if _newclass:perr = _swig_property(_interface.exterr_t_perr_get, _interface.exterr_t_perr_set)
    __swig_setmethods__["gpsglob"] = _interface.exterr_t_gpsglob_set
    __swig_getmethods__["gpsglob"] = _interface.exterr_t_gpsglob_get
    if _newclass:gpsglob = _swig_property(_interface.exterr_t_gpsglob_get, _interface.exterr_t_gpsglob_set)
    __swig_setmethods__["gloicb"] = _interface.exterr_t_gloicb_set
    __swig_getmethods__["gloicb"] = _interface.exterr_t_gloicb_get
    if _newclass:gloicb = _swig_property(_interface.exterr_t_gloicb_get, _interface.exterr_t_gloicb_set)
    def __init__(self): 
        this = _interface.new_exterr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_exterr_t
    __del__ = lambda self : None;
exterr_t_swigregister = _interface.exterr_t_swigregister
exterr_t_swigregister(exterr_t)

class snrmask_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, snrmask_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, snrmask_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ena"] = _interface.snrmask_t_ena_set
    __swig_getmethods__["ena"] = _interface.snrmask_t_ena_get
    if _newclass:ena = _swig_property(_interface.snrmask_t_ena_get, _interface.snrmask_t_ena_set)
    __swig_setmethods__["mask"] = _interface.snrmask_t_mask_set
    __swig_getmethods__["mask"] = _interface.snrmask_t_mask_get
    if _newclass:mask = _swig_property(_interface.snrmask_t_mask_get, _interface.snrmask_t_mask_set)
    def __init__(self): 
        this = _interface.new_snrmask_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_snrmask_t
    __del__ = lambda self : None;
snrmask_t_swigregister = _interface.snrmask_t_swigregister
snrmask_t_swigregister(snrmask_t)

class prcopt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, prcopt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, prcopt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mode"] = _interface.prcopt_t_mode_set
    __swig_getmethods__["mode"] = _interface.prcopt_t_mode_get
    if _newclass:mode = _swig_property(_interface.prcopt_t_mode_get, _interface.prcopt_t_mode_set)
    __swig_setmethods__["soltype"] = _interface.prcopt_t_soltype_set
    __swig_getmethods__["soltype"] = _interface.prcopt_t_soltype_get
    if _newclass:soltype = _swig_property(_interface.prcopt_t_soltype_get, _interface.prcopt_t_soltype_set)
    __swig_setmethods__["nf"] = _interface.prcopt_t_nf_set
    __swig_getmethods__["nf"] = _interface.prcopt_t_nf_get
    if _newclass:nf = _swig_property(_interface.prcopt_t_nf_get, _interface.prcopt_t_nf_set)
    __swig_setmethods__["navsys"] = _interface.prcopt_t_navsys_set
    __swig_getmethods__["navsys"] = _interface.prcopt_t_navsys_get
    if _newclass:navsys = _swig_property(_interface.prcopt_t_navsys_get, _interface.prcopt_t_navsys_set)
    __swig_setmethods__["elmin"] = _interface.prcopt_t_elmin_set
    __swig_getmethods__["elmin"] = _interface.prcopt_t_elmin_get
    if _newclass:elmin = _swig_property(_interface.prcopt_t_elmin_get, _interface.prcopt_t_elmin_set)
    __swig_setmethods__["snrmask"] = _interface.prcopt_t_snrmask_set
    __swig_getmethods__["snrmask"] = _interface.prcopt_t_snrmask_get
    if _newclass:snrmask = _swig_property(_interface.prcopt_t_snrmask_get, _interface.prcopt_t_snrmask_set)
    __swig_setmethods__["sateph"] = _interface.prcopt_t_sateph_set
    __swig_getmethods__["sateph"] = _interface.prcopt_t_sateph_get
    if _newclass:sateph = _swig_property(_interface.prcopt_t_sateph_get, _interface.prcopt_t_sateph_set)
    __swig_setmethods__["modear"] = _interface.prcopt_t_modear_set
    __swig_getmethods__["modear"] = _interface.prcopt_t_modear_get
    if _newclass:modear = _swig_property(_interface.prcopt_t_modear_get, _interface.prcopt_t_modear_set)
    __swig_setmethods__["glomodear"] = _interface.prcopt_t_glomodear_set
    __swig_getmethods__["glomodear"] = _interface.prcopt_t_glomodear_get
    if _newclass:glomodear = _swig_property(_interface.prcopt_t_glomodear_get, _interface.prcopt_t_glomodear_set)
    __swig_setmethods__["bdsmodear"] = _interface.prcopt_t_bdsmodear_set
    __swig_getmethods__["bdsmodear"] = _interface.prcopt_t_bdsmodear_get
    if _newclass:bdsmodear = _swig_property(_interface.prcopt_t_bdsmodear_get, _interface.prcopt_t_bdsmodear_set)
    __swig_setmethods__["maxout"] = _interface.prcopt_t_maxout_set
    __swig_getmethods__["maxout"] = _interface.prcopt_t_maxout_get
    if _newclass:maxout = _swig_property(_interface.prcopt_t_maxout_get, _interface.prcopt_t_maxout_set)
    __swig_setmethods__["minlock"] = _interface.prcopt_t_minlock_set
    __swig_getmethods__["minlock"] = _interface.prcopt_t_minlock_get
    if _newclass:minlock = _swig_property(_interface.prcopt_t_minlock_get, _interface.prcopt_t_minlock_set)
    __swig_setmethods__["minfix"] = _interface.prcopt_t_minfix_set
    __swig_getmethods__["minfix"] = _interface.prcopt_t_minfix_get
    if _newclass:minfix = _swig_property(_interface.prcopt_t_minfix_get, _interface.prcopt_t_minfix_set)
    __swig_setmethods__["ionoopt"] = _interface.prcopt_t_ionoopt_set
    __swig_getmethods__["ionoopt"] = _interface.prcopt_t_ionoopt_get
    if _newclass:ionoopt = _swig_property(_interface.prcopt_t_ionoopt_get, _interface.prcopt_t_ionoopt_set)
    __swig_setmethods__["tropopt"] = _interface.prcopt_t_tropopt_set
    __swig_getmethods__["tropopt"] = _interface.prcopt_t_tropopt_get
    if _newclass:tropopt = _swig_property(_interface.prcopt_t_tropopt_get, _interface.prcopt_t_tropopt_set)
    __swig_setmethods__["dynamics"] = _interface.prcopt_t_dynamics_set
    __swig_getmethods__["dynamics"] = _interface.prcopt_t_dynamics_get
    if _newclass:dynamics = _swig_property(_interface.prcopt_t_dynamics_get, _interface.prcopt_t_dynamics_set)
    __swig_setmethods__["tidecorr"] = _interface.prcopt_t_tidecorr_set
    __swig_getmethods__["tidecorr"] = _interface.prcopt_t_tidecorr_get
    if _newclass:tidecorr = _swig_property(_interface.prcopt_t_tidecorr_get, _interface.prcopt_t_tidecorr_set)
    __swig_setmethods__["niter"] = _interface.prcopt_t_niter_set
    __swig_getmethods__["niter"] = _interface.prcopt_t_niter_get
    if _newclass:niter = _swig_property(_interface.prcopt_t_niter_get, _interface.prcopt_t_niter_set)
    __swig_setmethods__["codesmooth"] = _interface.prcopt_t_codesmooth_set
    __swig_getmethods__["codesmooth"] = _interface.prcopt_t_codesmooth_get
    if _newclass:codesmooth = _swig_property(_interface.prcopt_t_codesmooth_get, _interface.prcopt_t_codesmooth_set)
    __swig_setmethods__["intpref"] = _interface.prcopt_t_intpref_set
    __swig_getmethods__["intpref"] = _interface.prcopt_t_intpref_get
    if _newclass:intpref = _swig_property(_interface.prcopt_t_intpref_get, _interface.prcopt_t_intpref_set)
    __swig_setmethods__["sbascorr"] = _interface.prcopt_t_sbascorr_set
    __swig_getmethods__["sbascorr"] = _interface.prcopt_t_sbascorr_get
    if _newclass:sbascorr = _swig_property(_interface.prcopt_t_sbascorr_get, _interface.prcopt_t_sbascorr_set)
    __swig_setmethods__["sbassatsel"] = _interface.prcopt_t_sbassatsel_set
    __swig_getmethods__["sbassatsel"] = _interface.prcopt_t_sbassatsel_get
    if _newclass:sbassatsel = _swig_property(_interface.prcopt_t_sbassatsel_get, _interface.prcopt_t_sbassatsel_set)
    __swig_setmethods__["rovpos"] = _interface.prcopt_t_rovpos_set
    __swig_getmethods__["rovpos"] = _interface.prcopt_t_rovpos_get
    if _newclass:rovpos = _swig_property(_interface.prcopt_t_rovpos_get, _interface.prcopt_t_rovpos_set)
    __swig_setmethods__["refpos"] = _interface.prcopt_t_refpos_set
    __swig_getmethods__["refpos"] = _interface.prcopt_t_refpos_get
    if _newclass:refpos = _swig_property(_interface.prcopt_t_refpos_get, _interface.prcopt_t_refpos_set)
    __swig_setmethods__["eratio"] = _interface.prcopt_t_eratio_set
    __swig_getmethods__["eratio"] = _interface.prcopt_t_eratio_get
    if _newclass:eratio = _swig_property(_interface.prcopt_t_eratio_get, _interface.prcopt_t_eratio_set)
    __swig_setmethods__["err"] = _interface.prcopt_t_err_set
    __swig_getmethods__["err"] = _interface.prcopt_t_err_get
    if _newclass:err = _swig_property(_interface.prcopt_t_err_get, _interface.prcopt_t_err_set)
    __swig_setmethods__["std"] = _interface.prcopt_t_std_set
    __swig_getmethods__["std"] = _interface.prcopt_t_std_get
    if _newclass:std = _swig_property(_interface.prcopt_t_std_get, _interface.prcopt_t_std_set)
    __swig_setmethods__["prn"] = _interface.prcopt_t_prn_set
    __swig_getmethods__["prn"] = _interface.prcopt_t_prn_get
    if _newclass:prn = _swig_property(_interface.prcopt_t_prn_get, _interface.prcopt_t_prn_set)
    __swig_setmethods__["sclkstab"] = _interface.prcopt_t_sclkstab_set
    __swig_getmethods__["sclkstab"] = _interface.prcopt_t_sclkstab_get
    if _newclass:sclkstab = _swig_property(_interface.prcopt_t_sclkstab_get, _interface.prcopt_t_sclkstab_set)
    __swig_setmethods__["thresar"] = _interface.prcopt_t_thresar_set
    __swig_getmethods__["thresar"] = _interface.prcopt_t_thresar_get
    if _newclass:thresar = _swig_property(_interface.prcopt_t_thresar_get, _interface.prcopt_t_thresar_set)
    __swig_setmethods__["elmaskar"] = _interface.prcopt_t_elmaskar_set
    __swig_getmethods__["elmaskar"] = _interface.prcopt_t_elmaskar_get
    if _newclass:elmaskar = _swig_property(_interface.prcopt_t_elmaskar_get, _interface.prcopt_t_elmaskar_set)
    __swig_setmethods__["elmaskhold"] = _interface.prcopt_t_elmaskhold_set
    __swig_getmethods__["elmaskhold"] = _interface.prcopt_t_elmaskhold_get
    if _newclass:elmaskhold = _swig_property(_interface.prcopt_t_elmaskhold_get, _interface.prcopt_t_elmaskhold_set)
    __swig_setmethods__["thresslip"] = _interface.prcopt_t_thresslip_set
    __swig_getmethods__["thresslip"] = _interface.prcopt_t_thresslip_get
    if _newclass:thresslip = _swig_property(_interface.prcopt_t_thresslip_get, _interface.prcopt_t_thresslip_set)
    __swig_setmethods__["maxtdiff"] = _interface.prcopt_t_maxtdiff_set
    __swig_getmethods__["maxtdiff"] = _interface.prcopt_t_maxtdiff_get
    if _newclass:maxtdiff = _swig_property(_interface.prcopt_t_maxtdiff_get, _interface.prcopt_t_maxtdiff_set)
    __swig_setmethods__["maxinno"] = _interface.prcopt_t_maxinno_set
    __swig_getmethods__["maxinno"] = _interface.prcopt_t_maxinno_get
    if _newclass:maxinno = _swig_property(_interface.prcopt_t_maxinno_get, _interface.prcopt_t_maxinno_set)
    __swig_setmethods__["maxgdop"] = _interface.prcopt_t_maxgdop_set
    __swig_getmethods__["maxgdop"] = _interface.prcopt_t_maxgdop_get
    if _newclass:maxgdop = _swig_property(_interface.prcopt_t_maxgdop_get, _interface.prcopt_t_maxgdop_set)
    __swig_setmethods__["baseline"] = _interface.prcopt_t_baseline_set
    __swig_getmethods__["baseline"] = _interface.prcopt_t_baseline_get
    if _newclass:baseline = _swig_property(_interface.prcopt_t_baseline_get, _interface.prcopt_t_baseline_set)
    __swig_setmethods__["ru"] = _interface.prcopt_t_ru_set
    __swig_getmethods__["ru"] = _interface.prcopt_t_ru_get
    if _newclass:ru = _swig_property(_interface.prcopt_t_ru_get, _interface.prcopt_t_ru_set)
    __swig_setmethods__["rb"] = _interface.prcopt_t_rb_set
    __swig_getmethods__["rb"] = _interface.prcopt_t_rb_get
    if _newclass:rb = _swig_property(_interface.prcopt_t_rb_get, _interface.prcopt_t_rb_set)
    __swig_setmethods__["anttype"] = _interface.prcopt_t_anttype_set
    __swig_getmethods__["anttype"] = _interface.prcopt_t_anttype_get
    if _newclass:anttype = _swig_property(_interface.prcopt_t_anttype_get, _interface.prcopt_t_anttype_set)
    __swig_setmethods__["antdel"] = _interface.prcopt_t_antdel_set
    __swig_getmethods__["antdel"] = _interface.prcopt_t_antdel_get
    if _newclass:antdel = _swig_property(_interface.prcopt_t_antdel_get, _interface.prcopt_t_antdel_set)
    __swig_setmethods__["pcvr"] = _interface.prcopt_t_pcvr_set
    __swig_getmethods__["pcvr"] = _interface.prcopt_t_pcvr_get
    if _newclass:pcvr = _swig_property(_interface.prcopt_t_pcvr_get, _interface.prcopt_t_pcvr_set)
    __swig_setmethods__["exsats"] = _interface.prcopt_t_exsats_set
    __swig_getmethods__["exsats"] = _interface.prcopt_t_exsats_get
    if _newclass:exsats = _swig_property(_interface.prcopt_t_exsats_get, _interface.prcopt_t_exsats_set)
    __swig_setmethods__["rnxopt"] = _interface.prcopt_t_rnxopt_set
    __swig_getmethods__["rnxopt"] = _interface.prcopt_t_rnxopt_get
    if _newclass:rnxopt = _swig_property(_interface.prcopt_t_rnxopt_get, _interface.prcopt_t_rnxopt_set)
    __swig_setmethods__["posopt"] = _interface.prcopt_t_posopt_set
    __swig_getmethods__["posopt"] = _interface.prcopt_t_posopt_get
    if _newclass:posopt = _swig_property(_interface.prcopt_t_posopt_get, _interface.prcopt_t_posopt_set)
    __swig_setmethods__["syncsol"] = _interface.prcopt_t_syncsol_set
    __swig_getmethods__["syncsol"] = _interface.prcopt_t_syncsol_get
    if _newclass:syncsol = _swig_property(_interface.prcopt_t_syncsol_get, _interface.prcopt_t_syncsol_set)
    __swig_setmethods__["odisp"] = _interface.prcopt_t_odisp_set
    __swig_getmethods__["odisp"] = _interface.prcopt_t_odisp_get
    if _newclass:odisp = _swig_property(_interface.prcopt_t_odisp_get, _interface.prcopt_t_odisp_set)
    __swig_setmethods__["exterr"] = _interface.prcopt_t_exterr_set
    __swig_getmethods__["exterr"] = _interface.prcopt_t_exterr_get
    if _newclass:exterr = _swig_property(_interface.prcopt_t_exterr_get, _interface.prcopt_t_exterr_set)
    def __init__(self): 
        this = _interface.new_prcopt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_prcopt_t
    __del__ = lambda self : None;
prcopt_t_swigregister = _interface.prcopt_t_swigregister
prcopt_t_swigregister(prcopt_t)

class solopt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, solopt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, solopt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["posf"] = _interface.solopt_t_posf_set
    __swig_getmethods__["posf"] = _interface.solopt_t_posf_get
    if _newclass:posf = _swig_property(_interface.solopt_t_posf_get, _interface.solopt_t_posf_set)
    __swig_setmethods__["times"] = _interface.solopt_t_times_set
    __swig_getmethods__["times"] = _interface.solopt_t_times_get
    if _newclass:times = _swig_property(_interface.solopt_t_times_get, _interface.solopt_t_times_set)
    __swig_setmethods__["timef"] = _interface.solopt_t_timef_set
    __swig_getmethods__["timef"] = _interface.solopt_t_timef_get
    if _newclass:timef = _swig_property(_interface.solopt_t_timef_get, _interface.solopt_t_timef_set)
    __swig_setmethods__["timeu"] = _interface.solopt_t_timeu_set
    __swig_getmethods__["timeu"] = _interface.solopt_t_timeu_get
    if _newclass:timeu = _swig_property(_interface.solopt_t_timeu_get, _interface.solopt_t_timeu_set)
    __swig_setmethods__["degf"] = _interface.solopt_t_degf_set
    __swig_getmethods__["degf"] = _interface.solopt_t_degf_get
    if _newclass:degf = _swig_property(_interface.solopt_t_degf_get, _interface.solopt_t_degf_set)
    __swig_setmethods__["outhead"] = _interface.solopt_t_outhead_set
    __swig_getmethods__["outhead"] = _interface.solopt_t_outhead_get
    if _newclass:outhead = _swig_property(_interface.solopt_t_outhead_get, _interface.solopt_t_outhead_set)
    __swig_setmethods__["outopt"] = _interface.solopt_t_outopt_set
    __swig_getmethods__["outopt"] = _interface.solopt_t_outopt_get
    if _newclass:outopt = _swig_property(_interface.solopt_t_outopt_get, _interface.solopt_t_outopt_set)
    __swig_setmethods__["datum"] = _interface.solopt_t_datum_set
    __swig_getmethods__["datum"] = _interface.solopt_t_datum_get
    if _newclass:datum = _swig_property(_interface.solopt_t_datum_get, _interface.solopt_t_datum_set)
    __swig_setmethods__["height"] = _interface.solopt_t_height_set
    __swig_getmethods__["height"] = _interface.solopt_t_height_get
    if _newclass:height = _swig_property(_interface.solopt_t_height_get, _interface.solopt_t_height_set)
    __swig_setmethods__["geoid"] = _interface.solopt_t_geoid_set
    __swig_getmethods__["geoid"] = _interface.solopt_t_geoid_get
    if _newclass:geoid = _swig_property(_interface.solopt_t_geoid_get, _interface.solopt_t_geoid_set)
    __swig_setmethods__["solstatic"] = _interface.solopt_t_solstatic_set
    __swig_getmethods__["solstatic"] = _interface.solopt_t_solstatic_get
    if _newclass:solstatic = _swig_property(_interface.solopt_t_solstatic_get, _interface.solopt_t_solstatic_set)
    __swig_setmethods__["sstat"] = _interface.solopt_t_sstat_set
    __swig_getmethods__["sstat"] = _interface.solopt_t_sstat_get
    if _newclass:sstat = _swig_property(_interface.solopt_t_sstat_get, _interface.solopt_t_sstat_set)
    __swig_setmethods__["trace"] = _interface.solopt_t_trace_set
    __swig_getmethods__["trace"] = _interface.solopt_t_trace_get
    if _newclass:trace = _swig_property(_interface.solopt_t_trace_get, _interface.solopt_t_trace_set)
    __swig_setmethods__["nmeaintv"] = _interface.solopt_t_nmeaintv_set
    __swig_getmethods__["nmeaintv"] = _interface.solopt_t_nmeaintv_get
    if _newclass:nmeaintv = _swig_property(_interface.solopt_t_nmeaintv_get, _interface.solopt_t_nmeaintv_set)
    __swig_setmethods__["sep"] = _interface.solopt_t_sep_set
    __swig_getmethods__["sep"] = _interface.solopt_t_sep_get
    if _newclass:sep = _swig_property(_interface.solopt_t_sep_get, _interface.solopt_t_sep_set)
    __swig_setmethods__["prog"] = _interface.solopt_t_prog_set
    __swig_getmethods__["prog"] = _interface.solopt_t_prog_get
    if _newclass:prog = _swig_property(_interface.solopt_t_prog_get, _interface.solopt_t_prog_set)
    def __init__(self): 
        this = _interface.new_solopt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_solopt_t
    __del__ = lambda self : None;
solopt_t_swigregister = _interface.solopt_t_swigregister
solopt_t_swigregister(solopt_t)

class filopt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, filopt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, filopt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["satantp"] = _interface.filopt_t_satantp_set
    __swig_getmethods__["satantp"] = _interface.filopt_t_satantp_get
    if _newclass:satantp = _swig_property(_interface.filopt_t_satantp_get, _interface.filopt_t_satantp_set)
    __swig_setmethods__["rcvantp"] = _interface.filopt_t_rcvantp_set
    __swig_getmethods__["rcvantp"] = _interface.filopt_t_rcvantp_get
    if _newclass:rcvantp = _swig_property(_interface.filopt_t_rcvantp_get, _interface.filopt_t_rcvantp_set)
    __swig_setmethods__["stapos"] = _interface.filopt_t_stapos_set
    __swig_getmethods__["stapos"] = _interface.filopt_t_stapos_get
    if _newclass:stapos = _swig_property(_interface.filopt_t_stapos_get, _interface.filopt_t_stapos_set)
    __swig_setmethods__["geoid"] = _interface.filopt_t_geoid_set
    __swig_getmethods__["geoid"] = _interface.filopt_t_geoid_get
    if _newclass:geoid = _swig_property(_interface.filopt_t_geoid_get, _interface.filopt_t_geoid_set)
    __swig_setmethods__["iono"] = _interface.filopt_t_iono_set
    __swig_getmethods__["iono"] = _interface.filopt_t_iono_get
    if _newclass:iono = _swig_property(_interface.filopt_t_iono_get, _interface.filopt_t_iono_set)
    __swig_setmethods__["dcb"] = _interface.filopt_t_dcb_set
    __swig_getmethods__["dcb"] = _interface.filopt_t_dcb_get
    if _newclass:dcb = _swig_property(_interface.filopt_t_dcb_get, _interface.filopt_t_dcb_set)
    __swig_setmethods__["eop"] = _interface.filopt_t_eop_set
    __swig_getmethods__["eop"] = _interface.filopt_t_eop_get
    if _newclass:eop = _swig_property(_interface.filopt_t_eop_get, _interface.filopt_t_eop_set)
    __swig_setmethods__["blq"] = _interface.filopt_t_blq_set
    __swig_getmethods__["blq"] = _interface.filopt_t_blq_get
    if _newclass:blq = _swig_property(_interface.filopt_t_blq_get, _interface.filopt_t_blq_set)
    __swig_setmethods__["tempdir"] = _interface.filopt_t_tempdir_set
    __swig_getmethods__["tempdir"] = _interface.filopt_t_tempdir_get
    if _newclass:tempdir = _swig_property(_interface.filopt_t_tempdir_get, _interface.filopt_t_tempdir_set)
    __swig_setmethods__["geexe"] = _interface.filopt_t_geexe_set
    __swig_getmethods__["geexe"] = _interface.filopt_t_geexe_get
    if _newclass:geexe = _swig_property(_interface.filopt_t_geexe_get, _interface.filopt_t_geexe_set)
    __swig_setmethods__["solstat"] = _interface.filopt_t_solstat_set
    __swig_getmethods__["solstat"] = _interface.filopt_t_solstat_get
    if _newclass:solstat = _swig_property(_interface.filopt_t_solstat_get, _interface.filopt_t_solstat_set)
    __swig_setmethods__["trace"] = _interface.filopt_t_trace_set
    __swig_getmethods__["trace"] = _interface.filopt_t_trace_get
    if _newclass:trace = _swig_property(_interface.filopt_t_trace_get, _interface.filopt_t_trace_set)
    def __init__(self): 
        this = _interface.new_filopt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_filopt_t
    __del__ = lambda self : None;
filopt_t_swigregister = _interface.filopt_t_swigregister
filopt_t_swigregister(filopt_t)

class rnxopt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rnxopt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rnxopt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ts"] = _interface.rnxopt_t_ts_set
    __swig_getmethods__["ts"] = _interface.rnxopt_t_ts_get
    if _newclass:ts = _swig_property(_interface.rnxopt_t_ts_get, _interface.rnxopt_t_ts_set)
    __swig_setmethods__["te"] = _interface.rnxopt_t_te_set
    __swig_getmethods__["te"] = _interface.rnxopt_t_te_get
    if _newclass:te = _swig_property(_interface.rnxopt_t_te_get, _interface.rnxopt_t_te_set)
    __swig_setmethods__["tint"] = _interface.rnxopt_t_tint_set
    __swig_getmethods__["tint"] = _interface.rnxopt_t_tint_get
    if _newclass:tint = _swig_property(_interface.rnxopt_t_tint_get, _interface.rnxopt_t_tint_set)
    __swig_setmethods__["tunit"] = _interface.rnxopt_t_tunit_set
    __swig_getmethods__["tunit"] = _interface.rnxopt_t_tunit_get
    if _newclass:tunit = _swig_property(_interface.rnxopt_t_tunit_get, _interface.rnxopt_t_tunit_set)
    __swig_setmethods__["rnxver"] = _interface.rnxopt_t_rnxver_set
    __swig_getmethods__["rnxver"] = _interface.rnxopt_t_rnxver_get
    if _newclass:rnxver = _swig_property(_interface.rnxopt_t_rnxver_get, _interface.rnxopt_t_rnxver_set)
    __swig_setmethods__["navsys"] = _interface.rnxopt_t_navsys_set
    __swig_getmethods__["navsys"] = _interface.rnxopt_t_navsys_get
    if _newclass:navsys = _swig_property(_interface.rnxopt_t_navsys_get, _interface.rnxopt_t_navsys_set)
    __swig_setmethods__["obstype"] = _interface.rnxopt_t_obstype_set
    __swig_getmethods__["obstype"] = _interface.rnxopt_t_obstype_get
    if _newclass:obstype = _swig_property(_interface.rnxopt_t_obstype_get, _interface.rnxopt_t_obstype_set)
    __swig_setmethods__["freqtype"] = _interface.rnxopt_t_freqtype_set
    __swig_getmethods__["freqtype"] = _interface.rnxopt_t_freqtype_get
    if _newclass:freqtype = _swig_property(_interface.rnxopt_t_freqtype_get, _interface.rnxopt_t_freqtype_set)
    __swig_setmethods__["mask"] = _interface.rnxopt_t_mask_set
    __swig_getmethods__["mask"] = _interface.rnxopt_t_mask_get
    if _newclass:mask = _swig_property(_interface.rnxopt_t_mask_get, _interface.rnxopt_t_mask_set)
    __swig_setmethods__["staid"] = _interface.rnxopt_t_staid_set
    __swig_getmethods__["staid"] = _interface.rnxopt_t_staid_get
    if _newclass:staid = _swig_property(_interface.rnxopt_t_staid_get, _interface.rnxopt_t_staid_set)
    __swig_setmethods__["prog"] = _interface.rnxopt_t_prog_set
    __swig_getmethods__["prog"] = _interface.rnxopt_t_prog_get
    if _newclass:prog = _swig_property(_interface.rnxopt_t_prog_get, _interface.rnxopt_t_prog_set)
    __swig_setmethods__["runby"] = _interface.rnxopt_t_runby_set
    __swig_getmethods__["runby"] = _interface.rnxopt_t_runby_get
    if _newclass:runby = _swig_property(_interface.rnxopt_t_runby_get, _interface.rnxopt_t_runby_set)
    __swig_setmethods__["marker"] = _interface.rnxopt_t_marker_set
    __swig_getmethods__["marker"] = _interface.rnxopt_t_marker_get
    if _newclass:marker = _swig_property(_interface.rnxopt_t_marker_get, _interface.rnxopt_t_marker_set)
    __swig_setmethods__["markerno"] = _interface.rnxopt_t_markerno_set
    __swig_getmethods__["markerno"] = _interface.rnxopt_t_markerno_get
    if _newclass:markerno = _swig_property(_interface.rnxopt_t_markerno_get, _interface.rnxopt_t_markerno_set)
    __swig_setmethods__["markertype"] = _interface.rnxopt_t_markertype_set
    __swig_getmethods__["markertype"] = _interface.rnxopt_t_markertype_get
    if _newclass:markertype = _swig_property(_interface.rnxopt_t_markertype_get, _interface.rnxopt_t_markertype_set)
    __swig_setmethods__["name"] = _interface.rnxopt_t_name_set
    __swig_getmethods__["name"] = _interface.rnxopt_t_name_get
    if _newclass:name = _swig_property(_interface.rnxopt_t_name_get, _interface.rnxopt_t_name_set)
    __swig_setmethods__["rec"] = _interface.rnxopt_t_rec_set
    __swig_getmethods__["rec"] = _interface.rnxopt_t_rec_get
    if _newclass:rec = _swig_property(_interface.rnxopt_t_rec_get, _interface.rnxopt_t_rec_set)
    __swig_setmethods__["ant"] = _interface.rnxopt_t_ant_set
    __swig_getmethods__["ant"] = _interface.rnxopt_t_ant_get
    if _newclass:ant = _swig_property(_interface.rnxopt_t_ant_get, _interface.rnxopt_t_ant_set)
    __swig_setmethods__["apppos"] = _interface.rnxopt_t_apppos_set
    __swig_getmethods__["apppos"] = _interface.rnxopt_t_apppos_get
    if _newclass:apppos = _swig_property(_interface.rnxopt_t_apppos_get, _interface.rnxopt_t_apppos_set)
    __swig_setmethods__["antdel"] = _interface.rnxopt_t_antdel_set
    __swig_getmethods__["antdel"] = _interface.rnxopt_t_antdel_get
    if _newclass:antdel = _swig_property(_interface.rnxopt_t_antdel_get, _interface.rnxopt_t_antdel_set)
    __swig_setmethods__["comment"] = _interface.rnxopt_t_comment_set
    __swig_getmethods__["comment"] = _interface.rnxopt_t_comment_get
    if _newclass:comment = _swig_property(_interface.rnxopt_t_comment_get, _interface.rnxopt_t_comment_set)
    __swig_setmethods__["rcvopt"] = _interface.rnxopt_t_rcvopt_set
    __swig_getmethods__["rcvopt"] = _interface.rnxopt_t_rcvopt_get
    if _newclass:rcvopt = _swig_property(_interface.rnxopt_t_rcvopt_get, _interface.rnxopt_t_rcvopt_set)
    __swig_setmethods__["exsats"] = _interface.rnxopt_t_exsats_set
    __swig_getmethods__["exsats"] = _interface.rnxopt_t_exsats_get
    if _newclass:exsats = _swig_property(_interface.rnxopt_t_exsats_get, _interface.rnxopt_t_exsats_set)
    __swig_setmethods__["scanobs"] = _interface.rnxopt_t_scanobs_set
    __swig_getmethods__["scanobs"] = _interface.rnxopt_t_scanobs_get
    if _newclass:scanobs = _swig_property(_interface.rnxopt_t_scanobs_get, _interface.rnxopt_t_scanobs_set)
    __swig_setmethods__["outiono"] = _interface.rnxopt_t_outiono_set
    __swig_getmethods__["outiono"] = _interface.rnxopt_t_outiono_get
    if _newclass:outiono = _swig_property(_interface.rnxopt_t_outiono_get, _interface.rnxopt_t_outiono_set)
    __swig_setmethods__["outtime"] = _interface.rnxopt_t_outtime_set
    __swig_getmethods__["outtime"] = _interface.rnxopt_t_outtime_get
    if _newclass:outtime = _swig_property(_interface.rnxopt_t_outtime_get, _interface.rnxopt_t_outtime_set)
    __swig_setmethods__["outleaps"] = _interface.rnxopt_t_outleaps_set
    __swig_getmethods__["outleaps"] = _interface.rnxopt_t_outleaps_get
    if _newclass:outleaps = _swig_property(_interface.rnxopt_t_outleaps_get, _interface.rnxopt_t_outleaps_set)
    __swig_setmethods__["autopos"] = _interface.rnxopt_t_autopos_set
    __swig_getmethods__["autopos"] = _interface.rnxopt_t_autopos_get
    if _newclass:autopos = _swig_property(_interface.rnxopt_t_autopos_get, _interface.rnxopt_t_autopos_set)
    __swig_setmethods__["tstart"] = _interface.rnxopt_t_tstart_set
    __swig_getmethods__["tstart"] = _interface.rnxopt_t_tstart_get
    if _newclass:tstart = _swig_property(_interface.rnxopt_t_tstart_get, _interface.rnxopt_t_tstart_set)
    __swig_setmethods__["tend"] = _interface.rnxopt_t_tend_set
    __swig_getmethods__["tend"] = _interface.rnxopt_t_tend_get
    if _newclass:tend = _swig_property(_interface.rnxopt_t_tend_get, _interface.rnxopt_t_tend_set)
    __swig_setmethods__["trtcm"] = _interface.rnxopt_t_trtcm_set
    __swig_getmethods__["trtcm"] = _interface.rnxopt_t_trtcm_get
    if _newclass:trtcm = _swig_property(_interface.rnxopt_t_trtcm_get, _interface.rnxopt_t_trtcm_set)
    __swig_setmethods__["tobs"] = _interface.rnxopt_t_tobs_set
    __swig_getmethods__["tobs"] = _interface.rnxopt_t_tobs_get
    if _newclass:tobs = _swig_property(_interface.rnxopt_t_tobs_get, _interface.rnxopt_t_tobs_set)
    __swig_setmethods__["nobs"] = _interface.rnxopt_t_nobs_set
    __swig_getmethods__["nobs"] = _interface.rnxopt_t_nobs_get
    if _newclass:nobs = _swig_property(_interface.rnxopt_t_nobs_get, _interface.rnxopt_t_nobs_set)
    def __init__(self): 
        this = _interface.new_rnxopt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_rnxopt_t
    __del__ = lambda self : None;
rnxopt_t_swigregister = _interface.rnxopt_t_swigregister
rnxopt_t_swigregister(rnxopt_t)

class ssat_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ssat_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ssat_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sys"] = _interface.ssat_t_sys_set
    __swig_getmethods__["sys"] = _interface.ssat_t_sys_get
    if _newclass:sys = _swig_property(_interface.ssat_t_sys_get, _interface.ssat_t_sys_set)
    __swig_setmethods__["vs"] = _interface.ssat_t_vs_set
    __swig_getmethods__["vs"] = _interface.ssat_t_vs_get
    if _newclass:vs = _swig_property(_interface.ssat_t_vs_get, _interface.ssat_t_vs_set)
    __swig_setmethods__["azel"] = _interface.ssat_t_azel_set
    __swig_getmethods__["azel"] = _interface.ssat_t_azel_get
    if _newclass:azel = _swig_property(_interface.ssat_t_azel_get, _interface.ssat_t_azel_set)
    __swig_setmethods__["resp"] = _interface.ssat_t_resp_set
    __swig_getmethods__["resp"] = _interface.ssat_t_resp_get
    if _newclass:resp = _swig_property(_interface.ssat_t_resp_get, _interface.ssat_t_resp_set)
    __swig_setmethods__["resc"] = _interface.ssat_t_resc_set
    __swig_getmethods__["resc"] = _interface.ssat_t_resc_get
    if _newclass:resc = _swig_property(_interface.ssat_t_resc_get, _interface.ssat_t_resc_set)
    __swig_setmethods__["vsat"] = _interface.ssat_t_vsat_set
    __swig_getmethods__["vsat"] = _interface.ssat_t_vsat_get
    if _newclass:vsat = _swig_property(_interface.ssat_t_vsat_get, _interface.ssat_t_vsat_set)
    __swig_setmethods__["snr"] = _interface.ssat_t_snr_set
    __swig_getmethods__["snr"] = _interface.ssat_t_snr_get
    if _newclass:snr = _swig_property(_interface.ssat_t_snr_get, _interface.ssat_t_snr_set)
    __swig_setmethods__["fix"] = _interface.ssat_t_fix_set
    __swig_getmethods__["fix"] = _interface.ssat_t_fix_get
    if _newclass:fix = _swig_property(_interface.ssat_t_fix_get, _interface.ssat_t_fix_set)
    __swig_setmethods__["slip"] = _interface.ssat_t_slip_set
    __swig_getmethods__["slip"] = _interface.ssat_t_slip_get
    if _newclass:slip = _swig_property(_interface.ssat_t_slip_get, _interface.ssat_t_slip_set)
    __swig_setmethods__["lock"] = _interface.ssat_t_lock_set
    __swig_getmethods__["lock"] = _interface.ssat_t_lock_get
    if _newclass:lock = _swig_property(_interface.ssat_t_lock_get, _interface.ssat_t_lock_set)
    __swig_setmethods__["outc"] = _interface.ssat_t_outc_set
    __swig_getmethods__["outc"] = _interface.ssat_t_outc_get
    if _newclass:outc = _swig_property(_interface.ssat_t_outc_get, _interface.ssat_t_outc_set)
    __swig_setmethods__["slipc"] = _interface.ssat_t_slipc_set
    __swig_getmethods__["slipc"] = _interface.ssat_t_slipc_get
    if _newclass:slipc = _swig_property(_interface.ssat_t_slipc_get, _interface.ssat_t_slipc_set)
    __swig_setmethods__["rejc"] = _interface.ssat_t_rejc_set
    __swig_getmethods__["rejc"] = _interface.ssat_t_rejc_get
    if _newclass:rejc = _swig_property(_interface.ssat_t_rejc_get, _interface.ssat_t_rejc_set)
    __swig_setmethods__["gf"] = _interface.ssat_t_gf_set
    __swig_getmethods__["gf"] = _interface.ssat_t_gf_get
    if _newclass:gf = _swig_property(_interface.ssat_t_gf_get, _interface.ssat_t_gf_set)
    __swig_setmethods__["gf2"] = _interface.ssat_t_gf2_set
    __swig_getmethods__["gf2"] = _interface.ssat_t_gf2_get
    if _newclass:gf2 = _swig_property(_interface.ssat_t_gf2_get, _interface.ssat_t_gf2_set)
    __swig_setmethods__["phw"] = _interface.ssat_t_phw_set
    __swig_getmethods__["phw"] = _interface.ssat_t_phw_get
    if _newclass:phw = _swig_property(_interface.ssat_t_phw_get, _interface.ssat_t_phw_set)
    __swig_setmethods__["pt"] = _interface.ssat_t_pt_set
    __swig_getmethods__["pt"] = _interface.ssat_t_pt_get
    if _newclass:pt = _swig_property(_interface.ssat_t_pt_get, _interface.ssat_t_pt_set)
    __swig_setmethods__["ph"] = _interface.ssat_t_ph_set
    __swig_getmethods__["ph"] = _interface.ssat_t_ph_get
    if _newclass:ph = _swig_property(_interface.ssat_t_ph_get, _interface.ssat_t_ph_set)
    def __init__(self): 
        this = _interface.new_ssat_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_ssat_t
    __del__ = lambda self : None;
ssat_t_swigregister = _interface.ssat_t_swigregister
ssat_t_swigregister(ssat_t)

class ambc_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ambc_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ambc_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["epoch"] = _interface.ambc_t_epoch_set
    __swig_getmethods__["epoch"] = _interface.ambc_t_epoch_get
    if _newclass:epoch = _swig_property(_interface.ambc_t_epoch_get, _interface.ambc_t_epoch_set)
    __swig_setmethods__["fixcnt"] = _interface.ambc_t_fixcnt_set
    __swig_getmethods__["fixcnt"] = _interface.ambc_t_fixcnt_get
    if _newclass:fixcnt = _swig_property(_interface.ambc_t_fixcnt_get, _interface.ambc_t_fixcnt_set)
    __swig_setmethods__["flags"] = _interface.ambc_t_flags_set
    __swig_getmethods__["flags"] = _interface.ambc_t_flags_get
    if _newclass:flags = _swig_property(_interface.ambc_t_flags_get, _interface.ambc_t_flags_set)
    __swig_setmethods__["n"] = _interface.ambc_t_n_set
    __swig_getmethods__["n"] = _interface.ambc_t_n_get
    if _newclass:n = _swig_property(_interface.ambc_t_n_get, _interface.ambc_t_n_set)
    __swig_setmethods__["LC"] = _interface.ambc_t_LC_set
    __swig_getmethods__["LC"] = _interface.ambc_t_LC_get
    if _newclass:LC = _swig_property(_interface.ambc_t_LC_get, _interface.ambc_t_LC_set)
    __swig_setmethods__["LCv"] = _interface.ambc_t_LCv_set
    __swig_getmethods__["LCv"] = _interface.ambc_t_LCv_get
    if _newclass:LCv = _swig_property(_interface.ambc_t_LCv_get, _interface.ambc_t_LCv_set)
    def __init__(self): 
        this = _interface.new_ambc_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_ambc_t
    __del__ = lambda self : None;
ambc_t_swigregister = _interface.ambc_t_swigregister
ambc_t_swigregister(ambc_t)

class rtk_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rtk_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rtk_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sol"] = _interface.rtk_t_sol_set
    __swig_getmethods__["sol"] = _interface.rtk_t_sol_get
    if _newclass:sol = _swig_property(_interface.rtk_t_sol_get, _interface.rtk_t_sol_set)
    __swig_setmethods__["rb"] = _interface.rtk_t_rb_set
    __swig_getmethods__["rb"] = _interface.rtk_t_rb_get
    if _newclass:rb = _swig_property(_interface.rtk_t_rb_get, _interface.rtk_t_rb_set)
    __swig_setmethods__["nx"] = _interface.rtk_t_nx_set
    __swig_getmethods__["nx"] = _interface.rtk_t_nx_get
    if _newclass:nx = _swig_property(_interface.rtk_t_nx_get, _interface.rtk_t_nx_set)
    __swig_setmethods__["na"] = _interface.rtk_t_na_set
    __swig_getmethods__["na"] = _interface.rtk_t_na_get
    if _newclass:na = _swig_property(_interface.rtk_t_na_get, _interface.rtk_t_na_set)
    __swig_setmethods__["tt"] = _interface.rtk_t_tt_set
    __swig_getmethods__["tt"] = _interface.rtk_t_tt_get
    if _newclass:tt = _swig_property(_interface.rtk_t_tt_get, _interface.rtk_t_tt_set)
    __swig_setmethods__["x"] = _interface.rtk_t_x_set
    __swig_getmethods__["x"] = _interface.rtk_t_x_get
    if _newclass:x = _swig_property(_interface.rtk_t_x_get, _interface.rtk_t_x_set)
    __swig_setmethods__["P"] = _interface.rtk_t_P_set
    __swig_getmethods__["P"] = _interface.rtk_t_P_get
    if _newclass:P = _swig_property(_interface.rtk_t_P_get, _interface.rtk_t_P_set)
    __swig_setmethods__["xa"] = _interface.rtk_t_xa_set
    __swig_getmethods__["xa"] = _interface.rtk_t_xa_get
    if _newclass:xa = _swig_property(_interface.rtk_t_xa_get, _interface.rtk_t_xa_set)
    __swig_setmethods__["Pa"] = _interface.rtk_t_Pa_set
    __swig_getmethods__["Pa"] = _interface.rtk_t_Pa_get
    if _newclass:Pa = _swig_property(_interface.rtk_t_Pa_get, _interface.rtk_t_Pa_set)
    __swig_setmethods__["nfix"] = _interface.rtk_t_nfix_set
    __swig_getmethods__["nfix"] = _interface.rtk_t_nfix_get
    if _newclass:nfix = _swig_property(_interface.rtk_t_nfix_get, _interface.rtk_t_nfix_set)
    __swig_setmethods__["ambc"] = _interface.rtk_t_ambc_set
    __swig_getmethods__["ambc"] = _interface.rtk_t_ambc_get
    if _newclass:ambc = _swig_property(_interface.rtk_t_ambc_get, _interface.rtk_t_ambc_set)
    __swig_setmethods__["ssat"] = _interface.rtk_t_ssat_set
    __swig_getmethods__["ssat"] = _interface.rtk_t_ssat_get
    if _newclass:ssat = _swig_property(_interface.rtk_t_ssat_get, _interface.rtk_t_ssat_set)
    __swig_setmethods__["neb"] = _interface.rtk_t_neb_set
    __swig_getmethods__["neb"] = _interface.rtk_t_neb_get
    if _newclass:neb = _swig_property(_interface.rtk_t_neb_get, _interface.rtk_t_neb_set)
    __swig_setmethods__["errbuf"] = _interface.rtk_t_errbuf_set
    __swig_getmethods__["errbuf"] = _interface.rtk_t_errbuf_get
    if _newclass:errbuf = _swig_property(_interface.rtk_t_errbuf_get, _interface.rtk_t_errbuf_set)
    __swig_setmethods__["opt"] = _interface.rtk_t_opt_set
    __swig_getmethods__["opt"] = _interface.rtk_t_opt_get
    if _newclass:opt = _swig_property(_interface.rtk_t_opt_get, _interface.rtk_t_opt_set)
    def __init__(self): 
        this = _interface.new_rtk_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_rtk_t
    __del__ = lambda self : None;
rtk_t_swigregister = _interface.rtk_t_swigregister
rtk_t_swigregister(rtk_t)

class raw_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, raw_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, raw_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _interface.raw_t_time_set
    __swig_getmethods__["time"] = _interface.raw_t_time_get
    if _newclass:time = _swig_property(_interface.raw_t_time_get, _interface.raw_t_time_set)
    __swig_setmethods__["tobs"] = _interface.raw_t_tobs_set
    __swig_getmethods__["tobs"] = _interface.raw_t_tobs_get
    if _newclass:tobs = _swig_property(_interface.raw_t_tobs_get, _interface.raw_t_tobs_set)
    __swig_setmethods__["obs"] = _interface.raw_t_obs_set
    __swig_getmethods__["obs"] = _interface.raw_t_obs_get
    if _newclass:obs = _swig_property(_interface.raw_t_obs_get, _interface.raw_t_obs_set)
    __swig_setmethods__["obuf"] = _interface.raw_t_obuf_set
    __swig_getmethods__["obuf"] = _interface.raw_t_obuf_get
    if _newclass:obuf = _swig_property(_interface.raw_t_obuf_get, _interface.raw_t_obuf_set)
    __swig_setmethods__["nav"] = _interface.raw_t_nav_set
    __swig_getmethods__["nav"] = _interface.raw_t_nav_get
    if _newclass:nav = _swig_property(_interface.raw_t_nav_get, _interface.raw_t_nav_set)
    __swig_setmethods__["sta"] = _interface.raw_t_sta_set
    __swig_getmethods__["sta"] = _interface.raw_t_sta_get
    if _newclass:sta = _swig_property(_interface.raw_t_sta_get, _interface.raw_t_sta_set)
    __swig_setmethods__["ephsat"] = _interface.raw_t_ephsat_set
    __swig_getmethods__["ephsat"] = _interface.raw_t_ephsat_get
    if _newclass:ephsat = _swig_property(_interface.raw_t_ephsat_get, _interface.raw_t_ephsat_set)
    __swig_setmethods__["sbsmsg"] = _interface.raw_t_sbsmsg_set
    __swig_getmethods__["sbsmsg"] = _interface.raw_t_sbsmsg_get
    if _newclass:sbsmsg = _swig_property(_interface.raw_t_sbsmsg_get, _interface.raw_t_sbsmsg_set)
    __swig_setmethods__["msgtype"] = _interface.raw_t_msgtype_set
    __swig_getmethods__["msgtype"] = _interface.raw_t_msgtype_get
    if _newclass:msgtype = _swig_property(_interface.raw_t_msgtype_get, _interface.raw_t_msgtype_set)
    __swig_setmethods__["subfrm"] = _interface.raw_t_subfrm_set
    __swig_getmethods__["subfrm"] = _interface.raw_t_subfrm_get
    if _newclass:subfrm = _swig_property(_interface.raw_t_subfrm_get, _interface.raw_t_subfrm_set)
    __swig_setmethods__["lexmsg"] = _interface.raw_t_lexmsg_set
    __swig_getmethods__["lexmsg"] = _interface.raw_t_lexmsg_get
    if _newclass:lexmsg = _swig_property(_interface.raw_t_lexmsg_get, _interface.raw_t_lexmsg_set)
    __swig_setmethods__["lockt"] = _interface.raw_t_lockt_set
    __swig_getmethods__["lockt"] = _interface.raw_t_lockt_get
    if _newclass:lockt = _swig_property(_interface.raw_t_lockt_get, _interface.raw_t_lockt_set)
    __swig_setmethods__["icpp"] = _interface.raw_t_icpp_set
    __swig_getmethods__["icpp"] = _interface.raw_t_icpp_get
    if _newclass:icpp = _swig_property(_interface.raw_t_icpp_get, _interface.raw_t_icpp_set)
    __swig_setmethods__["off"] = _interface.raw_t_off_set
    __swig_getmethods__["off"] = _interface.raw_t_off_get
    if _newclass:off = _swig_property(_interface.raw_t_off_get, _interface.raw_t_off_set)
    __swig_setmethods__["icpc"] = _interface.raw_t_icpc_set
    __swig_getmethods__["icpc"] = _interface.raw_t_icpc_get
    if _newclass:icpc = _swig_property(_interface.raw_t_icpc_get, _interface.raw_t_icpc_set)
    __swig_setmethods__["prCA"] = _interface.raw_t_prCA_set
    __swig_getmethods__["prCA"] = _interface.raw_t_prCA_get
    if _newclass:prCA = _swig_property(_interface.raw_t_prCA_get, _interface.raw_t_prCA_set)
    __swig_setmethods__["dpCA"] = _interface.raw_t_dpCA_set
    __swig_getmethods__["dpCA"] = _interface.raw_t_dpCA_get
    if _newclass:dpCA = _swig_property(_interface.raw_t_dpCA_get, _interface.raw_t_dpCA_set)
    __swig_setmethods__["halfc"] = _interface.raw_t_halfc_set
    __swig_getmethods__["halfc"] = _interface.raw_t_halfc_get
    if _newclass:halfc = _swig_property(_interface.raw_t_halfc_get, _interface.raw_t_halfc_set)
    __swig_setmethods__["freqn"] = _interface.raw_t_freqn_set
    __swig_getmethods__["freqn"] = _interface.raw_t_freqn_get
    if _newclass:freqn = _swig_property(_interface.raw_t_freqn_get, _interface.raw_t_freqn_set)
    __swig_setmethods__["nbyte"] = _interface.raw_t_nbyte_set
    __swig_getmethods__["nbyte"] = _interface.raw_t_nbyte_get
    if _newclass:nbyte = _swig_property(_interface.raw_t_nbyte_get, _interface.raw_t_nbyte_set)
    __swig_setmethods__["len"] = _interface.raw_t_len_set
    __swig_getmethods__["len"] = _interface.raw_t_len_get
    if _newclass:len = _swig_property(_interface.raw_t_len_get, _interface.raw_t_len_set)
    __swig_setmethods__["iod"] = _interface.raw_t_iod_set
    __swig_getmethods__["iod"] = _interface.raw_t_iod_get
    if _newclass:iod = _swig_property(_interface.raw_t_iod_get, _interface.raw_t_iod_set)
    __swig_setmethods__["tod"] = _interface.raw_t_tod_set
    __swig_getmethods__["tod"] = _interface.raw_t_tod_get
    if _newclass:tod = _swig_property(_interface.raw_t_tod_get, _interface.raw_t_tod_set)
    __swig_setmethods__["tbase"] = _interface.raw_t_tbase_set
    __swig_getmethods__["tbase"] = _interface.raw_t_tbase_get
    if _newclass:tbase = _swig_property(_interface.raw_t_tbase_get, _interface.raw_t_tbase_set)
    __swig_setmethods__["flag"] = _interface.raw_t_flag_set
    __swig_getmethods__["flag"] = _interface.raw_t_flag_get
    if _newclass:flag = _swig_property(_interface.raw_t_flag_get, _interface.raw_t_flag_set)
    __swig_setmethods__["outtype"] = _interface.raw_t_outtype_set
    __swig_getmethods__["outtype"] = _interface.raw_t_outtype_get
    if _newclass:outtype = _swig_property(_interface.raw_t_outtype_get, _interface.raw_t_outtype_set)
    __swig_setmethods__["buff"] = _interface.raw_t_buff_set
    __swig_getmethods__["buff"] = _interface.raw_t_buff_get
    if _newclass:buff = _swig_property(_interface.raw_t_buff_get, _interface.raw_t_buff_set)
    __swig_setmethods__["opt"] = _interface.raw_t_opt_set
    __swig_getmethods__["opt"] = _interface.raw_t_opt_get
    if _newclass:opt = _swig_property(_interface.raw_t_opt_get, _interface.raw_t_opt_set)
    __swig_setmethods__["receive_time"] = _interface.raw_t_receive_time_set
    __swig_getmethods__["receive_time"] = _interface.raw_t_receive_time_get
    if _newclass:receive_time = _swig_property(_interface.raw_t_receive_time_get, _interface.raw_t_receive_time_set)
    __swig_setmethods__["plen"] = _interface.raw_t_plen_set
    __swig_getmethods__["plen"] = _interface.raw_t_plen_get
    if _newclass:plen = _swig_property(_interface.raw_t_plen_get, _interface.raw_t_plen_set)
    __swig_setmethods__["pbyte"] = _interface.raw_t_pbyte_set
    __swig_getmethods__["pbyte"] = _interface.raw_t_pbyte_get
    if _newclass:pbyte = _swig_property(_interface.raw_t_pbyte_get, _interface.raw_t_pbyte_set)
    __swig_setmethods__["page"] = _interface.raw_t_page_set
    __swig_getmethods__["page"] = _interface.raw_t_page_get
    if _newclass:page = _swig_property(_interface.raw_t_page_get, _interface.raw_t_page_set)
    __swig_setmethods__["reply"] = _interface.raw_t_reply_set
    __swig_getmethods__["reply"] = _interface.raw_t_reply_get
    if _newclass:reply = _swig_property(_interface.raw_t_reply_get, _interface.raw_t_reply_set)
    __swig_setmethods__["week"] = _interface.raw_t_week_set
    __swig_getmethods__["week"] = _interface.raw_t_week_get
    if _newclass:week = _swig_property(_interface.raw_t_week_get, _interface.raw_t_week_set)
    __swig_setmethods__["pbuff"] = _interface.raw_t_pbuff_set
    __swig_getmethods__["pbuff"] = _interface.raw_t_pbuff_get
    if _newclass:pbuff = _swig_property(_interface.raw_t_pbuff_get, _interface.raw_t_pbuff_set)
    def __init__(self): 
        this = _interface.new_raw_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_raw_t
    __del__ = lambda self : None;
raw_t_swigregister = _interface.raw_t_swigregister
raw_t_swigregister(raw_t)

class stream_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stream_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stream_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _interface.stream_t_type_set
    __swig_getmethods__["type"] = _interface.stream_t_type_get
    if _newclass:type = _swig_property(_interface.stream_t_type_get, _interface.stream_t_type_set)
    __swig_setmethods__["mode"] = _interface.stream_t_mode_set
    __swig_getmethods__["mode"] = _interface.stream_t_mode_get
    if _newclass:mode = _swig_property(_interface.stream_t_mode_get, _interface.stream_t_mode_set)
    __swig_setmethods__["state"] = _interface.stream_t_state_set
    __swig_getmethods__["state"] = _interface.stream_t_state_get
    if _newclass:state = _swig_property(_interface.stream_t_state_get, _interface.stream_t_state_set)
    __swig_setmethods__["inb"] = _interface.stream_t_inb_set
    __swig_getmethods__["inb"] = _interface.stream_t_inb_get
    if _newclass:inb = _swig_property(_interface.stream_t_inb_get, _interface.stream_t_inb_set)
    __swig_setmethods__["inr"] = _interface.stream_t_inr_set
    __swig_getmethods__["inr"] = _interface.stream_t_inr_get
    if _newclass:inr = _swig_property(_interface.stream_t_inr_get, _interface.stream_t_inr_set)
    __swig_setmethods__["outb"] = _interface.stream_t_outb_set
    __swig_getmethods__["outb"] = _interface.stream_t_outb_get
    if _newclass:outb = _swig_property(_interface.stream_t_outb_get, _interface.stream_t_outb_set)
    __swig_setmethods__["outr"] = _interface.stream_t_outr_set
    __swig_getmethods__["outr"] = _interface.stream_t_outr_get
    if _newclass:outr = _swig_property(_interface.stream_t_outr_get, _interface.stream_t_outr_set)
    __swig_setmethods__["tick"] = _interface.stream_t_tick_set
    __swig_getmethods__["tick"] = _interface.stream_t_tick_get
    if _newclass:tick = _swig_property(_interface.stream_t_tick_get, _interface.stream_t_tick_set)
    __swig_setmethods__["tact"] = _interface.stream_t_tact_set
    __swig_getmethods__["tact"] = _interface.stream_t_tact_get
    if _newclass:tact = _swig_property(_interface.stream_t_tact_get, _interface.stream_t_tact_set)
    __swig_setmethods__["inbt"] = _interface.stream_t_inbt_set
    __swig_getmethods__["inbt"] = _interface.stream_t_inbt_get
    if _newclass:inbt = _swig_property(_interface.stream_t_inbt_get, _interface.stream_t_inbt_set)
    __swig_setmethods__["outbt"] = _interface.stream_t_outbt_set
    __swig_getmethods__["outbt"] = _interface.stream_t_outbt_get
    if _newclass:outbt = _swig_property(_interface.stream_t_outbt_get, _interface.stream_t_outbt_set)
    __swig_setmethods__["lock"] = _interface.stream_t_lock_set
    __swig_getmethods__["lock"] = _interface.stream_t_lock_get
    if _newclass:lock = _swig_property(_interface.stream_t_lock_get, _interface.stream_t_lock_set)
    __swig_setmethods__["port"] = _interface.stream_t_port_set
    __swig_getmethods__["port"] = _interface.stream_t_port_get
    if _newclass:port = _swig_property(_interface.stream_t_port_get, _interface.stream_t_port_set)
    __swig_setmethods__["path"] = _interface.stream_t_path_set
    __swig_getmethods__["path"] = _interface.stream_t_path_get
    if _newclass:path = _swig_property(_interface.stream_t_path_get, _interface.stream_t_path_set)
    __swig_setmethods__["msg"] = _interface.stream_t_msg_set
    __swig_getmethods__["msg"] = _interface.stream_t_msg_get
    if _newclass:msg = _swig_property(_interface.stream_t_msg_get, _interface.stream_t_msg_set)
    def __init__(self): 
        this = _interface.new_stream_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_stream_t
    __del__ = lambda self : None;
stream_t_swigregister = _interface.stream_t_swigregister
stream_t_swigregister(stream_t)

class strconv_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, strconv_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, strconv_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["itype"] = _interface.strconv_t_itype_set
    __swig_getmethods__["itype"] = _interface.strconv_t_itype_get
    if _newclass:itype = _swig_property(_interface.strconv_t_itype_get, _interface.strconv_t_itype_set)
    __swig_setmethods__["otype"] = _interface.strconv_t_otype_set
    __swig_getmethods__["otype"] = _interface.strconv_t_otype_get
    if _newclass:otype = _swig_property(_interface.strconv_t_otype_get, _interface.strconv_t_otype_set)
    __swig_setmethods__["nmsg"] = _interface.strconv_t_nmsg_set
    __swig_getmethods__["nmsg"] = _interface.strconv_t_nmsg_get
    if _newclass:nmsg = _swig_property(_interface.strconv_t_nmsg_get, _interface.strconv_t_nmsg_set)
    __swig_setmethods__["msgs"] = _interface.strconv_t_msgs_set
    __swig_getmethods__["msgs"] = _interface.strconv_t_msgs_get
    if _newclass:msgs = _swig_property(_interface.strconv_t_msgs_get, _interface.strconv_t_msgs_set)
    __swig_setmethods__["tint"] = _interface.strconv_t_tint_set
    __swig_getmethods__["tint"] = _interface.strconv_t_tint_get
    if _newclass:tint = _swig_property(_interface.strconv_t_tint_get, _interface.strconv_t_tint_set)
    __swig_setmethods__["tick"] = _interface.strconv_t_tick_set
    __swig_getmethods__["tick"] = _interface.strconv_t_tick_get
    if _newclass:tick = _swig_property(_interface.strconv_t_tick_get, _interface.strconv_t_tick_set)
    __swig_setmethods__["ephsat"] = _interface.strconv_t_ephsat_set
    __swig_getmethods__["ephsat"] = _interface.strconv_t_ephsat_get
    if _newclass:ephsat = _swig_property(_interface.strconv_t_ephsat_get, _interface.strconv_t_ephsat_set)
    __swig_setmethods__["stasel"] = _interface.strconv_t_stasel_set
    __swig_getmethods__["stasel"] = _interface.strconv_t_stasel_get
    if _newclass:stasel = _swig_property(_interface.strconv_t_stasel_get, _interface.strconv_t_stasel_set)
    __swig_setmethods__["rtcm"] = _interface.strconv_t_rtcm_set
    __swig_getmethods__["rtcm"] = _interface.strconv_t_rtcm_get
    if _newclass:rtcm = _swig_property(_interface.strconv_t_rtcm_get, _interface.strconv_t_rtcm_set)
    __swig_setmethods__["raw"] = _interface.strconv_t_raw_set
    __swig_getmethods__["raw"] = _interface.strconv_t_raw_get
    if _newclass:raw = _swig_property(_interface.strconv_t_raw_get, _interface.strconv_t_raw_set)
    __swig_setmethods__["out"] = _interface.strconv_t_out_set
    __swig_getmethods__["out"] = _interface.strconv_t_out_get
    if _newclass:out = _swig_property(_interface.strconv_t_out_get, _interface.strconv_t_out_set)
    def __init__(self): 
        this = _interface.new_strconv_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_strconv_t
    __del__ = lambda self : None;
strconv_t_swigregister = _interface.strconv_t_swigregister
strconv_t_swigregister(strconv_t)

class strsvr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, strsvr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, strsvr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["state"] = _interface.strsvr_t_state_set
    __swig_getmethods__["state"] = _interface.strsvr_t_state_get
    if _newclass:state = _swig_property(_interface.strsvr_t_state_get, _interface.strsvr_t_state_set)
    __swig_setmethods__["cycle"] = _interface.strsvr_t_cycle_set
    __swig_getmethods__["cycle"] = _interface.strsvr_t_cycle_get
    if _newclass:cycle = _swig_property(_interface.strsvr_t_cycle_get, _interface.strsvr_t_cycle_set)
    __swig_setmethods__["buffsize"] = _interface.strsvr_t_buffsize_set
    __swig_getmethods__["buffsize"] = _interface.strsvr_t_buffsize_get
    if _newclass:buffsize = _swig_property(_interface.strsvr_t_buffsize_get, _interface.strsvr_t_buffsize_set)
    __swig_setmethods__["nmeacycle"] = _interface.strsvr_t_nmeacycle_set
    __swig_getmethods__["nmeacycle"] = _interface.strsvr_t_nmeacycle_get
    if _newclass:nmeacycle = _swig_property(_interface.strsvr_t_nmeacycle_get, _interface.strsvr_t_nmeacycle_set)
    __swig_setmethods__["nstr"] = _interface.strsvr_t_nstr_set
    __swig_getmethods__["nstr"] = _interface.strsvr_t_nstr_get
    if _newclass:nstr = _swig_property(_interface.strsvr_t_nstr_get, _interface.strsvr_t_nstr_set)
    __swig_setmethods__["npb"] = _interface.strsvr_t_npb_set
    __swig_getmethods__["npb"] = _interface.strsvr_t_npb_get
    if _newclass:npb = _swig_property(_interface.strsvr_t_npb_get, _interface.strsvr_t_npb_set)
    __swig_setmethods__["nmeapos"] = _interface.strsvr_t_nmeapos_set
    __swig_getmethods__["nmeapos"] = _interface.strsvr_t_nmeapos_get
    if _newclass:nmeapos = _swig_property(_interface.strsvr_t_nmeapos_get, _interface.strsvr_t_nmeapos_set)
    __swig_setmethods__["buff"] = _interface.strsvr_t_buff_set
    __swig_getmethods__["buff"] = _interface.strsvr_t_buff_get
    if _newclass:buff = _swig_property(_interface.strsvr_t_buff_get, _interface.strsvr_t_buff_set)
    __swig_setmethods__["pbuf"] = _interface.strsvr_t_pbuf_set
    __swig_getmethods__["pbuf"] = _interface.strsvr_t_pbuf_get
    if _newclass:pbuf = _swig_property(_interface.strsvr_t_pbuf_get, _interface.strsvr_t_pbuf_set)
    __swig_setmethods__["tick"] = _interface.strsvr_t_tick_set
    __swig_getmethods__["tick"] = _interface.strsvr_t_tick_get
    if _newclass:tick = _swig_property(_interface.strsvr_t_tick_get, _interface.strsvr_t_tick_set)
    __swig_setmethods__["stream"] = _interface.strsvr_t_stream_set
    __swig_getmethods__["stream"] = _interface.strsvr_t_stream_get
    if _newclass:stream = _swig_property(_interface.strsvr_t_stream_get, _interface.strsvr_t_stream_set)
    __swig_setmethods__["conv"] = _interface.strsvr_t_conv_set
    __swig_getmethods__["conv"] = _interface.strsvr_t_conv_get
    if _newclass:conv = _swig_property(_interface.strsvr_t_conv_get, _interface.strsvr_t_conv_set)
    __swig_setmethods__["thread"] = _interface.strsvr_t_thread_set
    __swig_getmethods__["thread"] = _interface.strsvr_t_thread_get
    if _newclass:thread = _swig_property(_interface.strsvr_t_thread_get, _interface.strsvr_t_thread_set)
    __swig_setmethods__["lock"] = _interface.strsvr_t_lock_set
    __swig_getmethods__["lock"] = _interface.strsvr_t_lock_get
    if _newclass:lock = _swig_property(_interface.strsvr_t_lock_get, _interface.strsvr_t_lock_set)
    def __init__(self): 
        this = _interface.new_strsvr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_strsvr_t
    __del__ = lambda self : None;
strsvr_t_swigregister = _interface.strsvr_t_swigregister
strsvr_t_swigregister(strsvr_t)

class rtksvr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rtksvr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rtksvr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["state"] = _interface.rtksvr_t_state_set
    __swig_getmethods__["state"] = _interface.rtksvr_t_state_get
    if _newclass:state = _swig_property(_interface.rtksvr_t_state_get, _interface.rtksvr_t_state_set)
    __swig_setmethods__["cycle"] = _interface.rtksvr_t_cycle_set
    __swig_getmethods__["cycle"] = _interface.rtksvr_t_cycle_get
    if _newclass:cycle = _swig_property(_interface.rtksvr_t_cycle_get, _interface.rtksvr_t_cycle_set)
    __swig_setmethods__["nmeacycle"] = _interface.rtksvr_t_nmeacycle_set
    __swig_getmethods__["nmeacycle"] = _interface.rtksvr_t_nmeacycle_get
    if _newclass:nmeacycle = _swig_property(_interface.rtksvr_t_nmeacycle_get, _interface.rtksvr_t_nmeacycle_set)
    __swig_setmethods__["nmeareq"] = _interface.rtksvr_t_nmeareq_set
    __swig_getmethods__["nmeareq"] = _interface.rtksvr_t_nmeareq_get
    if _newclass:nmeareq = _swig_property(_interface.rtksvr_t_nmeareq_get, _interface.rtksvr_t_nmeareq_set)
    __swig_setmethods__["nmeapos"] = _interface.rtksvr_t_nmeapos_set
    __swig_getmethods__["nmeapos"] = _interface.rtksvr_t_nmeapos_get
    if _newclass:nmeapos = _swig_property(_interface.rtksvr_t_nmeapos_get, _interface.rtksvr_t_nmeapos_set)
    __swig_setmethods__["buffsize"] = _interface.rtksvr_t_buffsize_set
    __swig_getmethods__["buffsize"] = _interface.rtksvr_t_buffsize_get
    if _newclass:buffsize = _swig_property(_interface.rtksvr_t_buffsize_get, _interface.rtksvr_t_buffsize_set)
    __swig_setmethods__["format"] = _interface.rtksvr_t_format_set
    __swig_getmethods__["format"] = _interface.rtksvr_t_format_get
    if _newclass:format = _swig_property(_interface.rtksvr_t_format_get, _interface.rtksvr_t_format_set)
    __swig_setmethods__["solopt"] = _interface.rtksvr_t_solopt_set
    __swig_getmethods__["solopt"] = _interface.rtksvr_t_solopt_get
    if _newclass:solopt = _swig_property(_interface.rtksvr_t_solopt_get, _interface.rtksvr_t_solopt_set)
    __swig_setmethods__["navsel"] = _interface.rtksvr_t_navsel_set
    __swig_getmethods__["navsel"] = _interface.rtksvr_t_navsel_get
    if _newclass:navsel = _swig_property(_interface.rtksvr_t_navsel_get, _interface.rtksvr_t_navsel_set)
    __swig_setmethods__["nsbs"] = _interface.rtksvr_t_nsbs_set
    __swig_getmethods__["nsbs"] = _interface.rtksvr_t_nsbs_get
    if _newclass:nsbs = _swig_property(_interface.rtksvr_t_nsbs_get, _interface.rtksvr_t_nsbs_set)
    __swig_setmethods__["nsol"] = _interface.rtksvr_t_nsol_set
    __swig_getmethods__["nsol"] = _interface.rtksvr_t_nsol_get
    if _newclass:nsol = _swig_property(_interface.rtksvr_t_nsol_get, _interface.rtksvr_t_nsol_set)
    __swig_setmethods__["rtk"] = _interface.rtksvr_t_rtk_set
    __swig_getmethods__["rtk"] = _interface.rtksvr_t_rtk_get
    if _newclass:rtk = _swig_property(_interface.rtksvr_t_rtk_get, _interface.rtksvr_t_rtk_set)
    __swig_setmethods__["nb"] = _interface.rtksvr_t_nb_set
    __swig_getmethods__["nb"] = _interface.rtksvr_t_nb_get
    if _newclass:nb = _swig_property(_interface.rtksvr_t_nb_get, _interface.rtksvr_t_nb_set)
    __swig_setmethods__["nsb"] = _interface.rtksvr_t_nsb_set
    __swig_getmethods__["nsb"] = _interface.rtksvr_t_nsb_get
    if _newclass:nsb = _swig_property(_interface.rtksvr_t_nsb_get, _interface.rtksvr_t_nsb_set)
    __swig_setmethods__["npb"] = _interface.rtksvr_t_npb_set
    __swig_getmethods__["npb"] = _interface.rtksvr_t_npb_get
    if _newclass:npb = _swig_property(_interface.rtksvr_t_npb_get, _interface.rtksvr_t_npb_set)
    __swig_setmethods__["buff"] = _interface.rtksvr_t_buff_set
    __swig_getmethods__["buff"] = _interface.rtksvr_t_buff_get
    if _newclass:buff = _swig_property(_interface.rtksvr_t_buff_get, _interface.rtksvr_t_buff_set)
    __swig_setmethods__["sbuf"] = _interface.rtksvr_t_sbuf_set
    __swig_getmethods__["sbuf"] = _interface.rtksvr_t_sbuf_get
    if _newclass:sbuf = _swig_property(_interface.rtksvr_t_sbuf_get, _interface.rtksvr_t_sbuf_set)
    __swig_setmethods__["pbuf"] = _interface.rtksvr_t_pbuf_set
    __swig_getmethods__["pbuf"] = _interface.rtksvr_t_pbuf_get
    if _newclass:pbuf = _swig_property(_interface.rtksvr_t_pbuf_get, _interface.rtksvr_t_pbuf_set)
    __swig_setmethods__["solbuf"] = _interface.rtksvr_t_solbuf_set
    __swig_getmethods__["solbuf"] = _interface.rtksvr_t_solbuf_get
    if _newclass:solbuf = _swig_property(_interface.rtksvr_t_solbuf_get, _interface.rtksvr_t_solbuf_set)
    __swig_setmethods__["nmsg"] = _interface.rtksvr_t_nmsg_set
    __swig_getmethods__["nmsg"] = _interface.rtksvr_t_nmsg_get
    if _newclass:nmsg = _swig_property(_interface.rtksvr_t_nmsg_get, _interface.rtksvr_t_nmsg_set)
    __swig_setmethods__["raw"] = _interface.rtksvr_t_raw_set
    __swig_getmethods__["raw"] = _interface.rtksvr_t_raw_get
    if _newclass:raw = _swig_property(_interface.rtksvr_t_raw_get, _interface.rtksvr_t_raw_set)
    __swig_setmethods__["rtcm"] = _interface.rtksvr_t_rtcm_set
    __swig_getmethods__["rtcm"] = _interface.rtksvr_t_rtcm_get
    if _newclass:rtcm = _swig_property(_interface.rtksvr_t_rtcm_get, _interface.rtksvr_t_rtcm_set)
    __swig_setmethods__["ftime"] = _interface.rtksvr_t_ftime_set
    __swig_getmethods__["ftime"] = _interface.rtksvr_t_ftime_get
    if _newclass:ftime = _swig_property(_interface.rtksvr_t_ftime_get, _interface.rtksvr_t_ftime_set)
    __swig_setmethods__["files"] = _interface.rtksvr_t_files_set
    __swig_getmethods__["files"] = _interface.rtksvr_t_files_get
    if _newclass:files = _swig_property(_interface.rtksvr_t_files_get, _interface.rtksvr_t_files_set)
    __swig_setmethods__["obs"] = _interface.rtksvr_t_obs_set
    __swig_getmethods__["obs"] = _interface.rtksvr_t_obs_get
    if _newclass:obs = _swig_property(_interface.rtksvr_t_obs_get, _interface.rtksvr_t_obs_set)
    __swig_setmethods__["nav"] = _interface.rtksvr_t_nav_set
    __swig_getmethods__["nav"] = _interface.rtksvr_t_nav_get
    if _newclass:nav = _swig_property(_interface.rtksvr_t_nav_get, _interface.rtksvr_t_nav_set)
    __swig_setmethods__["sbsmsg"] = _interface.rtksvr_t_sbsmsg_set
    __swig_getmethods__["sbsmsg"] = _interface.rtksvr_t_sbsmsg_get
    if _newclass:sbsmsg = _swig_property(_interface.rtksvr_t_sbsmsg_get, _interface.rtksvr_t_sbsmsg_set)
    __swig_setmethods__["stream"] = _interface.rtksvr_t_stream_set
    __swig_getmethods__["stream"] = _interface.rtksvr_t_stream_get
    if _newclass:stream = _swig_property(_interface.rtksvr_t_stream_get, _interface.rtksvr_t_stream_set)
    __swig_setmethods__["moni"] = _interface.rtksvr_t_moni_set
    __swig_getmethods__["moni"] = _interface.rtksvr_t_moni_get
    if _newclass:moni = _swig_property(_interface.rtksvr_t_moni_get, _interface.rtksvr_t_moni_set)
    __swig_setmethods__["tick"] = _interface.rtksvr_t_tick_set
    __swig_getmethods__["tick"] = _interface.rtksvr_t_tick_get
    if _newclass:tick = _swig_property(_interface.rtksvr_t_tick_get, _interface.rtksvr_t_tick_set)
    __swig_setmethods__["thread"] = _interface.rtksvr_t_thread_set
    __swig_getmethods__["thread"] = _interface.rtksvr_t_thread_get
    if _newclass:thread = _swig_property(_interface.rtksvr_t_thread_get, _interface.rtksvr_t_thread_set)
    __swig_setmethods__["cputime"] = _interface.rtksvr_t_cputime_set
    __swig_getmethods__["cputime"] = _interface.rtksvr_t_cputime_get
    if _newclass:cputime = _swig_property(_interface.rtksvr_t_cputime_get, _interface.rtksvr_t_cputime_set)
    __swig_setmethods__["prcout"] = _interface.rtksvr_t_prcout_set
    __swig_getmethods__["prcout"] = _interface.rtksvr_t_prcout_get
    if _newclass:prcout = _swig_property(_interface.rtksvr_t_prcout_get, _interface.rtksvr_t_prcout_set)
    __swig_setmethods__["lock"] = _interface.rtksvr_t_lock_set
    __swig_getmethods__["lock"] = _interface.rtksvr_t_lock_get
    if _newclass:lock = _swig_property(_interface.rtksvr_t_lock_get, _interface.rtksvr_t_lock_set)
    def __init__(self): 
        this = _interface.new_rtksvr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _interface.delete_rtksvr_t
    __del__ = lambda self : None;
rtksvr_t_swigregister = _interface.rtksvr_t_swigregister
rtksvr_t_swigregister(rtksvr_t)


def trace_c(*args):
  return _interface.trace_c(*args)
trace_c = _interface.trace_c
# This file is compatible with both classic and new-style classes.


